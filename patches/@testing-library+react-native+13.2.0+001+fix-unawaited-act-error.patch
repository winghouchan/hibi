# Quick fix for `act` call not being awaited when rendering a component a suspends.
# See https://github.com/callstack/react-native-testing-library/issues/1787.

diff --git a/node_modules/@testing-library/react-native/build/act.js b/node_modules/@testing-library/react-native/build/act.js
index 0b3c005..25f359d 100644
--- a/node_modules/@testing-library/react-native/build/act.js
+++ b/node_modules/@testing-library/react-native/build/act.js
@@ -8,8 +8,7 @@ exports.getIsReactActEnvironment = getIsReactActEnvironment;
 exports.setReactActEnvironment = setIsReactActEnvironment;
 var React = _interopRequireWildcard(require("react"));
 var _reactTestRenderer = require("react-test-renderer");
-function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
-function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
 // This file and the act() implementation is sourced from react-testing-library
 // https://github.com/testing-library/react-testing-library/blob/3dcd8a9649e25054c0e650d95fca2317b7008576/types/index.d.ts
 
diff --git a/node_modules/@testing-library/react-native/build/act.js.map b/node_modules/@testing-library/react-native/build/act.js.map
index ef34ce1..3d6ba34 100644
--- a/node_modules/@testing-library/react-native/build/act.js.map
+++ b/node_modules/@testing-library/react-native/build/act.js.map
@@ -1 +1 @@
-{"version":3,"file":"act.js","names":["React","_interopRequireWildcard","require","_reactTestRenderer","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","reactAct","act","reactTestRendererAct","setIsReactActEnvironment","isReactActEnvironment","globalThis","IS_REACT_ACT_ENVIRONMENT","getIsReactActEnvironment","withGlobalActEnvironment","actImplementation","callback","previousActEnvironment","callbackNeedsToBeAwaited","actResult","result","then","thenable","resolve","reject","returnValue","error","_default","exports"],"sources":["../src/act.ts"],"sourcesContent":["// This file and the act() implementation is sourced from react-testing-library\n// https://github.com/testing-library/react-testing-library/blob/3dcd8a9649e25054c0e650d95fca2317b7008576/types/index.d.ts\nimport * as React from 'react';\nimport { act as reactTestRendererAct } from 'react-test-renderer';\n\nconst reactAct = typeof React.act === 'function' ? React.act : reactTestRendererAct;\ntype ReactAct = 0 extends 1 & typeof React.act ? typeof reactTestRendererAct : typeof React.act;\n\n// See https://github.com/reactwg/react-18/discussions/102 for more context on global.IS_REACT_ACT_ENVIRONMENT\ndeclare global {\n  // eslint-disable-next-line no-var\n  var IS_REACT_ACT_ENVIRONMENT: boolean | undefined;\n}\n\nfunction setIsReactActEnvironment(isReactActEnvironment: boolean | undefined) {\n  globalThis.IS_REACT_ACT_ENVIRONMENT = isReactActEnvironment;\n}\n\nfunction getIsReactActEnvironment() {\n  return globalThis.IS_REACT_ACT_ENVIRONMENT;\n}\n\nfunction withGlobalActEnvironment(actImplementation: ReactAct) {\n  return (callback: Parameters<ReactAct>[0]) => {\n    const previousActEnvironment = getIsReactActEnvironment();\n    setIsReactActEnvironment(true);\n\n    try {\n      // The return value of `act` is always a thenable.\n      let callbackNeedsToBeAwaited = false;\n      const actResult = actImplementation(() => {\n        const result = callback();\n        // @ts-expect-error TS is too strict here\n        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n          callbackNeedsToBeAwaited = true;\n        }\n        return result;\n      });\n\n      if (callbackNeedsToBeAwaited) {\n        const thenable = actResult;\n        return {\n          then: (resolve: (value: never) => never, reject: (value: never) => never) => {\n            // eslint-disable-next-line promise/catch-or-return, promise/prefer-await-to-then\n            thenable.then(\n              // eslint-disable-next-line promise/always-return\n              (returnValue) => {\n                setIsReactActEnvironment(previousActEnvironment);\n                resolve(returnValue as never);\n              },\n              (error) => {\n                setIsReactActEnvironment(previousActEnvironment);\n                reject(error as never);\n              },\n            );\n          },\n        };\n      } else {\n        setIsReactActEnvironment(previousActEnvironment);\n        return actResult;\n      }\n    } catch (error) {\n      // Can't be a `finally {}` block since we don't know if we have to immediately restore IS_REACT_ACT_ENVIRONMENT\n      // or if we have to await the callback first.\n      setIsReactActEnvironment(previousActEnvironment);\n      throw error;\n    }\n  };\n}\n\n// @ts-expect-error: typings get too complex\nconst act = withGlobalActEnvironment(reactAct) as ReactAct;\n\nexport default act;\nexport { getIsReactActEnvironment, setIsReactActEnvironment as setReactActEnvironment };\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"act.js","names":["React","_interopRequireWildcard","require","_reactTestRenderer","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","reactAct","act","reactTestRendererAct","setIsReactActEnvironment","isReactActEnvironment","globalThis","IS_REACT_ACT_ENVIRONMENT","getIsReactActEnvironment","withGlobalActEnvironment","actImplementation","callback","previousActEnvironment","callbackNeedsToBeAwaited","actResult","result","then","thenable","resolve","reject","returnValue","error","_default","exports"],"sources":["../src/act.ts"],"sourcesContent":["// This file and the act() implementation is sourced from react-testing-library\n// https://github.com/testing-library/react-testing-library/blob/3dcd8a9649e25054c0e650d95fca2317b7008576/types/index.d.ts\nimport * as React from 'react';\nimport { act as reactTestRendererAct } from 'react-test-renderer';\n\nconst reactAct = typeof React.act === 'function' ? React.act : reactTestRendererAct;\ntype ReactAct = 0 extends 1 & typeof React.act ? typeof reactTestRendererAct : typeof React.act;\n\n// See https://github.com/reactwg/react-18/discussions/102 for more context on global.IS_REACT_ACT_ENVIRONMENT\ndeclare global {\n  var IS_REACT_ACT_ENVIRONMENT: boolean | undefined;\n}\n\nfunction setIsReactActEnvironment(isReactActEnvironment: boolean | undefined) {\n  globalThis.IS_REACT_ACT_ENVIRONMENT = isReactActEnvironment;\n}\n\nfunction getIsReactActEnvironment() {\n  return globalThis.IS_REACT_ACT_ENVIRONMENT;\n}\n\nfunction withGlobalActEnvironment(actImplementation: ReactAct) {\n  return (callback: Parameters<ReactAct>[0]) => {\n    const previousActEnvironment = getIsReactActEnvironment();\n    setIsReactActEnvironment(true);\n\n    try {\n      // The return value of `act` is always a thenable.\n      let callbackNeedsToBeAwaited = false;\n      const actResult = actImplementation(() => {\n        const result = callback();\n        // @ts-expect-error TS is too strict here\n        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n          callbackNeedsToBeAwaited = true;\n        }\n        return result;\n      });\n\n      if (callbackNeedsToBeAwaited) {\n        const thenable = actResult;\n        return {\n          then: (resolve: (value: never) => never, reject: (value: never) => never) => {\n            // eslint-disable-next-line promise/catch-or-return, promise/prefer-await-to-then\n            thenable.then(\n              // eslint-disable-next-line promise/always-return\n              (returnValue) => {\n                setIsReactActEnvironment(previousActEnvironment);\n                resolve(returnValue as never);\n              },\n              (error) => {\n                setIsReactActEnvironment(previousActEnvironment);\n                reject(error as never);\n              },\n            );\n          },\n        };\n      } else {\n        setIsReactActEnvironment(previousActEnvironment);\n        return actResult;\n      }\n    } catch (error) {\n      // Can't be a `finally {}` block since we don't know if we have to immediately restore IS_REACT_ACT_ENVIRONMENT\n      // or if we have to await the callback first.\n      setIsReactActEnvironment(previousActEnvironment);\n      throw error;\n    }\n  };\n}\n\n// @ts-expect-error: typings get too complex\nconst act = withGlobalActEnvironment(reactAct) as ReactAct;\n\nexport default act;\nexport { getIsReactActEnvironment, setIsReactActEnvironment as setReactActEnvironment };\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/cleanup.d.ts b/node_modules/@testing-library/react-native/build/cleanup.d.ts
index 1b11cb4..526a9de 100644
--- a/node_modules/@testing-library/react-native/build/cleanup.d.ts
+++ b/node_modules/@testing-library/react-native/build/cleanup.d.ts
@@ -1,4 +1,4 @@
 type CleanUpFunction = () => void;
-export default function cleanup(): void;
+export default function cleanup(): Promise<void>;
 export declare function addToCleanupQueue(fn: CleanUpFunction): void;
 export {};
diff --git a/node_modules/@testing-library/react-native/build/cleanup.js b/node_modules/@testing-library/react-native/build/cleanup.js
index a1049ea..8a12642 100644
--- a/node_modules/@testing-library/react-native/build/cleanup.js
+++ b/node_modules/@testing-library/react-native/build/cleanup.js
@@ -7,9 +7,11 @@ exports.addToCleanupQueue = addToCleanupQueue;
 exports.default = cleanup;
 var _screen = require("./screen");
 const cleanupQueue = new Set();
-function cleanup() {
+async function cleanup() {
   (0, _screen.clearRenderResult)();
-  cleanupQueue.forEach(fn => fn());
+  for (const fn of cleanupQueue.values()) {
+    await fn();
+  }
   cleanupQueue.clear();
 }
 function addToCleanupQueue(fn) {
diff --git a/node_modules/@testing-library/react-native/build/cleanup.js.map b/node_modules/@testing-library/react-native/build/cleanup.js.map
index f3d14db..97a0349 100644
--- a/node_modules/@testing-library/react-native/build/cleanup.js.map
+++ b/node_modules/@testing-library/react-native/build/cleanup.js.map
@@ -1 +1 @@
-{"version":3,"file":"cleanup.js","names":["_screen","require","cleanupQueue","Set","cleanup","clearRenderResult","forEach","fn","clear","addToCleanupQueue","add"],"sources":["../src/cleanup.ts"],"sourcesContent":["import { clearRenderResult } from './screen';\n\ntype CleanUpFunction = () => void;\n\nconst cleanupQueue = new Set<CleanUpFunction>();\n\nexport default function cleanup() {\n  clearRenderResult();\n\n  cleanupQueue.forEach((fn) => fn());\n  cleanupQueue.clear();\n}\n\nexport function addToCleanupQueue(fn: CleanUpFunction) {\n  cleanupQueue.add(fn);\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAIA,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAkB,CAAC;AAEhC,SAASC,OAAOA,CAAA,EAAG;EAChC,IAAAC,yBAAiB,EAAC,CAAC;EAEnBH,YAAY,CAACI,OAAO,CAAEC,EAAE,IAAKA,EAAE,CAAC,CAAC,CAAC;EAClCL,YAAY,CAACM,KAAK,CAAC,CAAC;AACtB;AAEO,SAASC,iBAAiBA,CAACF,EAAmB,EAAE;EACrDL,YAAY,CAACQ,GAAG,CAACH,EAAE,CAAC;AACtB","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"cleanup.js","names":["_screen","require","cleanupQueue","Set","cleanup","clearRenderResult","fn","values","clear","addToCleanupQueue","add"],"sources":["../src/cleanup.ts"],"sourcesContent":["import { clearRenderResult } from './screen';\n\ntype CleanUpFunction = () => void;\n\nconst cleanupQueue = new Set<CleanUpFunction>();\n\nexport default async function cleanup() {\n  clearRenderResult();\n\n  for (const fn of cleanupQueue.values()) {\n    await fn();\n  }\n\n  cleanupQueue.clear();\n}\n\nexport function addToCleanupQueue(fn: CleanUpFunction) {\n  cleanupQueue.add(fn);\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAIA,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAkB,CAAC;AAEhC,eAAeC,OAAOA,CAAA,EAAG;EACtC,IAAAC,yBAAiB,EAAC,CAAC;EAEnB,KAAK,MAAMC,EAAE,IAAIJ,YAAY,CAACK,MAAM,CAAC,CAAC,EAAE;IACtC,MAAMD,EAAE,CAAC,CAAC;EACZ;EAEAJ,YAAY,CAACM,KAAK,CAAC,CAAC;AACtB;AAEO,SAASC,iBAAiBA,CAACH,EAAmB,EAAE;EACrDJ,YAAY,CAACQ,GAAG,CAACJ,EAAE,CAAC;AACtB","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/config.d.ts b/node_modules/@testing-library/react-native/build/config.d.ts
index 1f21c9c..1d19672 100644
--- a/node_modules/@testing-library/react-native/build/config.d.ts
+++ b/node_modules/@testing-library/react-native/build/config.d.ts
@@ -1,4 +1,4 @@
-import type { DebugOptions } from './helpers/debug';
+import type { DebugOptions } from '@testing-library/react-native/build/helpers/debug';
 /**
  * Global configuration options for React Native Testing Library.
  */
diff --git a/node_modules/@testing-library/react-native/build/fire-event.d.ts b/node_modules/@testing-library/react-native/build/fire-event.d.ts
index 7f5db3e..71e25bf 100644
--- a/node_modules/@testing-library/react-native/build/fire-event.d.ts
+++ b/node_modules/@testing-library/react-native/build/fire-event.d.ts
@@ -7,10 +7,10 @@ type EventNameExtractor<T> = keyof {
     [K in keyof T as K extends `on${infer Rest}` ? Uncapitalize<Rest> : never]: T[K];
 };
 type EventName = StringWithAutocomplete<EventNameExtractor<ViewProps> | EventNameExtractor<TextProps> | EventNameExtractor<TextInputProps> | EventNameExtractor<PressableProps> | EventNameExtractor<ScrollViewProps>>;
-declare function fireEvent(element: ReactTestInstance, eventName: EventName, ...data: unknown[]): undefined;
+declare function fireEvent(element: ReactTestInstance, eventName: EventName, ...data: unknown[]): Promise<undefined>;
 declare namespace fireEvent {
-    var press: (element: ReactTestInstance, ...data: unknown[]) => undefined;
-    var changeText: (element: ReactTestInstance, ...data: unknown[]) => undefined;
-    var scroll: (element: ReactTestInstance, ...data: unknown[]) => undefined;
+    var press: (element: ReactTestInstance, ...data: unknown[]) => Promise<undefined>;
+    var changeText: (element: ReactTestInstance, ...data: unknown[]) => Promise<undefined>;
+    var scroll: (element: ReactTestInstance, ...data: unknown[]) => Promise<undefined>;
 }
 export default fireEvent;
diff --git a/node_modules/@testing-library/react-native/build/fire-event.js b/node_modules/@testing-library/react-native/build/fire-event.js
index e341e24..095f2d7 100644
--- a/node_modules/@testing-library/react-native/build/fire-event.js
+++ b/node_modules/@testing-library/react-native/build/fire-event.js
@@ -66,7 +66,7 @@ function findEventHandler(element, eventName, nearestTouchResponder) {
 
 // String union type of keys of T that start with on, stripped of 'on'
 
-function fireEvent(element, eventName, ...data) {
+async function fireEvent(element, eventName, ...data) {
   if (!(0, _componentTree.isElementMounted)(element)) {
     return;
   }
@@ -76,7 +76,7 @@ function fireEvent(element, eventName, ...data) {
     return;
   }
   let returnValue;
-  void (0, _act.default)(() => {
+  await (0, _act.default)(async () => {
     returnValue = handler(...data);
   });
   return returnValue;
diff --git a/node_modules/@testing-library/react-native/build/fire-event.js.map b/node_modules/@testing-library/react-native/build/fire-event.js.map
index 9cbee16..de8990b 100644
--- a/node_modules/@testing-library/react-native/build/fire-event.js.map
+++ b/node_modules/@testing-library/react-native/build/fire-event.js.map
@@ -1 +1 @@
-{"version":3,"file":"fire-event.js","names":["_act","_interopRequireDefault","require","_eventHandler","_componentTree","_hostComponentNames","_pointerEvents","_textInput","_nativeState","e","__esModule","default","isTouchResponder","element","isHostElement","Boolean","props","onStartShouldSetResponder","isHostTextInput","eventsAffectedByPointerEventsProp","Set","textInputEventsIgnoringEditableProp","isEventEnabled","eventName","nearestTouchResponder","isEditableTextInput","has","isPointerEventEnabled","touchStart","touchMove","onMoveShouldSetResponder","undefined","findEventHandler","touchResponder","handler","getEventHandler","loose","parent","fireEvent","data","isElementMounted","setNativeStateIfNeeded","returnValue","act","press","changeText","scroll","_default","exports","scrollEventNames","value","nativeState","valueForElement","set","isHostScrollView","contentOffset","tryGetContentOffset","contentOffsetForElement","event","nativeEvent","x","y","Number","isFinite"],"sources":["../src/fire-event.ts"],"sourcesContent":["import type {\n  PressableProps,\n  ScrollViewProps,\n  TextInputProps,\n  TextProps,\n  ViewProps,\n} from 'react-native';\nimport type { ReactTestInstance } from 'react-test-renderer';\n\nimport act from './act';\nimport { getEventHandler } from './event-handler';\nimport { isElementMounted, isHostElement } from './helpers/component-tree';\nimport { isHostScrollView, isHostTextInput } from './helpers/host-component-names';\nimport { isPointerEventEnabled } from './helpers/pointer-events';\nimport { isEditableTextInput } from './helpers/text-input';\nimport { nativeState } from './native-state';\nimport type { Point, StringWithAutocomplete } from './types';\n\ntype EventHandler = (...args: unknown[]) => unknown;\n\nexport function isTouchResponder(element: ReactTestInstance) {\n  if (!isHostElement(element)) {\n    return false;\n  }\n\n  return Boolean(element.props.onStartShouldSetResponder) || isHostTextInput(element);\n}\n\n/**\n * List of events affected by `pointerEvents` prop.\n *\n * Note: `fireEvent` is accepting both `press` and `onPress` for event names,\n * so we need cover both forms.\n */\nconst eventsAffectedByPointerEventsProp = new Set(['press', 'onPress']);\n\n/**\n * List of `TextInput` events not affected by `editable` prop.\n *\n * Note: `fireEvent` is accepting both `press` and `onPress` for event names,\n * so we need cover both forms.\n */\nconst textInputEventsIgnoringEditableProp = new Set([\n  'contentSizeChange',\n  'onContentSizeChange',\n  'layout',\n  'onLayout',\n  'scroll',\n  'onScroll',\n]);\n\nexport function isEventEnabled(\n  element: ReactTestInstance,\n  eventName: string,\n  nearestTouchResponder?: ReactTestInstance,\n) {\n  if (nearestTouchResponder != null && isHostTextInput(nearestTouchResponder)) {\n    return (\n      isEditableTextInput(nearestTouchResponder) ||\n      textInputEventsIgnoringEditableProp.has(eventName)\n    );\n  }\n\n  if (eventsAffectedByPointerEventsProp.has(eventName) && !isPointerEventEnabled(element)) {\n    return false;\n  }\n\n  const touchStart = nearestTouchResponder?.props.onStartShouldSetResponder?.();\n  const touchMove = nearestTouchResponder?.props.onMoveShouldSetResponder?.();\n  if (touchStart || touchMove) {\n    return true;\n  }\n\n  return touchStart === undefined && touchMove === undefined;\n}\n\nfunction findEventHandler(\n  element: ReactTestInstance,\n  eventName: string,\n  nearestTouchResponder?: ReactTestInstance,\n): EventHandler | null {\n  const touchResponder = isTouchResponder(element) ? element : nearestTouchResponder;\n\n  const handler = getEventHandler(element, eventName, { loose: true });\n  if (handler && isEventEnabled(element, eventName, touchResponder)) return handler;\n\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n  if (element.parent === null || element.parent.parent === null) {\n    return null;\n  }\n\n  return findEventHandler(element.parent, eventName, touchResponder);\n}\n\n// String union type of keys of T that start with on, stripped of 'on'\ntype EventNameExtractor<T> = keyof {\n  [K in keyof T as K extends `on${infer Rest}` ? Uncapitalize<Rest> : never]: T[K];\n};\n\ntype EventName = StringWithAutocomplete<\n  | EventNameExtractor<ViewProps>\n  | EventNameExtractor<TextProps>\n  | EventNameExtractor<TextInputProps>\n  | EventNameExtractor<PressableProps>\n  | EventNameExtractor<ScrollViewProps>\n>;\n\nfunction fireEvent(element: ReactTestInstance, eventName: EventName, ...data: unknown[]) {\n  if (!isElementMounted(element)) {\n    return;\n  }\n\n  setNativeStateIfNeeded(element, eventName, data[0]);\n\n  const handler = findEventHandler(element, eventName);\n  if (!handler) {\n    return;\n  }\n\n  let returnValue;\n  void act(() => {\n    returnValue = handler(...data);\n  });\n\n  return returnValue;\n}\n\nfireEvent.press = (element: ReactTestInstance, ...data: unknown[]) =>\n  fireEvent(element, 'press', ...data);\n\nfireEvent.changeText = (element: ReactTestInstance, ...data: unknown[]) =>\n  fireEvent(element, 'changeText', ...data);\n\nfireEvent.scroll = (element: ReactTestInstance, ...data: unknown[]) =>\n  fireEvent(element, 'scroll', ...data);\n\nexport default fireEvent;\n\nconst scrollEventNames = new Set([\n  'scroll',\n  'scrollBeginDrag',\n  'scrollEndDrag',\n  'momentumScrollBegin',\n  'momentumScrollEnd',\n]);\n\nfunction setNativeStateIfNeeded(element: ReactTestInstance, eventName: string, value: unknown) {\n  if (eventName === 'changeText' && typeof value === 'string' && isEditableTextInput(element)) {\n    nativeState.valueForElement.set(element, value);\n  }\n\n  if (scrollEventNames.has(eventName) && isHostScrollView(element)) {\n    const contentOffset = tryGetContentOffset(value);\n    if (contentOffset) {\n      nativeState.contentOffsetForElement.set(element, contentOffset);\n    }\n  }\n}\n\nfunction tryGetContentOffset(event: unknown): Point | null {\n  try {\n    // @ts-expect-error: try to extract contentOffset from the event value\n    const contentOffset = event?.nativeEvent?.contentOffset;\n    const x = contentOffset?.x;\n    const y = contentOffset?.y;\n    if (typeof x === 'number' || typeof y === 'number') {\n      return {\n        x: Number.isFinite(x) ? x : 0,\n        y: Number.isFinite(y) ? y : 0,\n      };\n    }\n  } catch {\n    // Do nothing\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"fire-event.js","names":["_act","_interopRequireDefault","require","_eventHandler","_componentTree","_hostComponentNames","_pointerEvents","_textInput","_nativeState","e","__esModule","default","isTouchResponder","element","isHostElement","Boolean","props","onStartShouldSetResponder","isHostTextInput","eventsAffectedByPointerEventsProp","Set","textInputEventsIgnoringEditableProp","isEventEnabled","eventName","nearestTouchResponder","isEditableTextInput","has","isPointerEventEnabled","touchStart","touchMove","onMoveShouldSetResponder","undefined","findEventHandler","touchResponder","handler","getEventHandler","loose","parent","fireEvent","data","isElementMounted","setNativeStateIfNeeded","returnValue","act","press","changeText","scroll","_default","exports","scrollEventNames","value","nativeState","valueForElement","set","isHostScrollView","contentOffset","tryGetContentOffset","contentOffsetForElement","event","nativeEvent","x","y","Number","isFinite"],"sources":["../src/fire-event.ts"],"sourcesContent":["import type {\n  PressableProps,\n  ScrollViewProps,\n  TextInputProps,\n  TextProps,\n  ViewProps,\n} from 'react-native';\nimport type { ReactTestInstance } from 'react-test-renderer';\n\nimport act from './act';\nimport { getEventHandler } from './event-handler';\nimport { isElementMounted, isHostElement } from './helpers/component-tree';\nimport { isHostScrollView, isHostTextInput } from './helpers/host-component-names';\nimport { isPointerEventEnabled } from './helpers/pointer-events';\nimport { isEditableTextInput } from './helpers/text-input';\nimport { nativeState } from './native-state';\nimport type { Point, StringWithAutocomplete } from './types';\n\ntype EventHandler = (...args: unknown[]) => unknown;\n\nexport function isTouchResponder(element: ReactTestInstance) {\n  if (!isHostElement(element)) {\n    return false;\n  }\n\n  return Boolean(element.props.onStartShouldSetResponder) || isHostTextInput(element);\n}\n\n/**\n * List of events affected by `pointerEvents` prop.\n *\n * Note: `fireEvent` is accepting both `press` and `onPress` for event names,\n * so we need cover both forms.\n */\nconst eventsAffectedByPointerEventsProp = new Set(['press', 'onPress']);\n\n/**\n * List of `TextInput` events not affected by `editable` prop.\n *\n * Note: `fireEvent` is accepting both `press` and `onPress` for event names,\n * so we need cover both forms.\n */\nconst textInputEventsIgnoringEditableProp = new Set([\n  'contentSizeChange',\n  'onContentSizeChange',\n  'layout',\n  'onLayout',\n  'scroll',\n  'onScroll',\n]);\n\nexport function isEventEnabled(\n  element: ReactTestInstance,\n  eventName: string,\n  nearestTouchResponder?: ReactTestInstance,\n) {\n  if (nearestTouchResponder != null && isHostTextInput(nearestTouchResponder)) {\n    return (\n      isEditableTextInput(nearestTouchResponder) ||\n      textInputEventsIgnoringEditableProp.has(eventName)\n    );\n  }\n\n  if (eventsAffectedByPointerEventsProp.has(eventName) && !isPointerEventEnabled(element)) {\n    return false;\n  }\n\n  const touchStart = nearestTouchResponder?.props.onStartShouldSetResponder?.();\n  const touchMove = nearestTouchResponder?.props.onMoveShouldSetResponder?.();\n  if (touchStart || touchMove) {\n    return true;\n  }\n\n  return touchStart === undefined && touchMove === undefined;\n}\n\nfunction findEventHandler(\n  element: ReactTestInstance,\n  eventName: string,\n  nearestTouchResponder?: ReactTestInstance,\n): EventHandler | null {\n  const touchResponder = isTouchResponder(element) ? element : nearestTouchResponder;\n\n  const handler = getEventHandler(element, eventName, { loose: true });\n  if (handler && isEventEnabled(element, eventName, touchResponder)) return handler;\n\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n  if (element.parent === null || element.parent.parent === null) {\n    return null;\n  }\n\n  return findEventHandler(element.parent, eventName, touchResponder);\n}\n\n// String union type of keys of T that start with on, stripped of 'on'\ntype EventNameExtractor<T> = keyof {\n  [K in keyof T as K extends `on${infer Rest}` ? Uncapitalize<Rest> : never]: T[K];\n};\n\ntype EventName = StringWithAutocomplete<\n  | EventNameExtractor<ViewProps>\n  | EventNameExtractor<TextProps>\n  | EventNameExtractor<TextInputProps>\n  | EventNameExtractor<PressableProps>\n  | EventNameExtractor<ScrollViewProps>\n>;\n\nasync function fireEvent(element: ReactTestInstance, eventName: EventName, ...data: unknown[]) {\n  if (!isElementMounted(element)) {\n    return;\n  }\n\n  setNativeStateIfNeeded(element, eventName, data[0]);\n\n  const handler = findEventHandler(element, eventName);\n  if (!handler) {\n    return;\n  }\n\n  let returnValue;\n  await act(async () => {\n    returnValue = handler(...data);\n  });\n\n  return returnValue;\n}\n\nfireEvent.press = (element: ReactTestInstance, ...data: unknown[]) =>\n  fireEvent(element, 'press', ...data);\n\nfireEvent.changeText = (element: ReactTestInstance, ...data: unknown[]) =>\n  fireEvent(element, 'changeText', ...data);\n\nfireEvent.scroll = (element: ReactTestInstance, ...data: unknown[]) =>\n  fireEvent(element, 'scroll', ...data);\n\nexport default fireEvent;\n\nconst scrollEventNames = new Set([\n  'scroll',\n  'scrollBeginDrag',\n  'scrollEndDrag',\n  'momentumScrollBegin',\n  'momentumScrollEnd',\n]);\n\nfunction setNativeStateIfNeeded(element: ReactTestInstance, eventName: string, value: unknown) {\n  if (eventName === 'changeText' && typeof value === 'string' && isEditableTextInput(element)) {\n    nativeState.valueForElement.set(element, value);\n  }\n\n  if (scrollEventNames.has(eventName) && isHostScrollView(element)) {\n    const contentOffset = tryGetContentOffset(value);\n    if (contentOffset) {\n      nativeState.contentOffsetForElement.set(element, contentOffset);\n    }\n  }\n}\n\nfunction tryGetContentOffset(event: unknown): Point | null {\n  try {\n    // @ts-expect-error: try to extract contentOffset from the event value\n    const contentOffset = event?.nativeEvent?.contentOffset;\n    const x = contentOffset?.x;\n    const y = contentOffset?.y;\n    if (typeof x === 'number' || typeof y === 'number') {\n      return {\n        x: Number.isFinite(x) ? x : 0,\n        y: Number.isFinite(y) ? y : 0,\n      };\n    }\n  } catch {\n    // Do nothing\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/helpers/debug.d.ts b/node_modules/@testing-library/react-native/build/helpers/debug.d.ts
index ff6c363..691e1e8 100644
--- a/node_modules/@testing-library/react-native/build/helpers/debug.d.ts
+++ b/node_modules/@testing-library/react-native/build/helpers/debug.d.ts
@@ -1,5 +1,5 @@
 import type { ReactTestRendererJSON } from 'react-test-renderer';
-import type { FormatElementOptions } from './format-element';
+import type { FormatElementOptions } from '@testing-library/react-native/build/helpers/format-element';
 export type DebugOptions = {
     message?: string;
 } & FormatElementOptions;
diff --git a/node_modules/@testing-library/react-native/build/helpers/format-element.d.ts b/node_modules/@testing-library/react-native/build/helpers/format-element.d.ts
index c079e2e..fb9ce3a 100644
--- a/node_modules/@testing-library/react-native/build/helpers/format-element.d.ts
+++ b/node_modules/@testing-library/react-native/build/helpers/format-element.d.ts
@@ -1,5 +1,5 @@
 import type { ReactTestInstance, ReactTestRendererJSON } from 'react-test-renderer';
-import type { MapPropsFunction } from './map-props';
+import type { MapPropsFunction } from '@testing-library/react-native/build/helpers/map-props';
 export type FormatElementOptions = {
     /** Minimize used space. */
     compact?: boolean;
diff --git a/node_modules/@testing-library/react-native/build/helpers/format-element.js b/node_modules/@testing-library/react-native/build/helpers/format-element.js
index b1b8f68..03b67b7 100644
--- a/node_modules/@testing-library/react-native/build/helpers/format-element.js
+++ b/node_modules/@testing-library/react-native/build/helpers/format-element.js
@@ -8,8 +8,7 @@ exports.formatElementList = formatElementList;
 exports.formatJson = formatJson;
 var _prettyFormat = _interopRequireWildcard(require("pretty-format"));
 var _mapProps = require("./map-props");
-function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
-function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
 /***
  * Format given element as a pretty-printed string.
  *
diff --git a/node_modules/@testing-library/react-native/build/helpers/format-element.js.map b/node_modules/@testing-library/react-native/build/helpers/format-element.js.map
index ca74c10..1a7a585 100644
--- a/node_modules/@testing-library/react-native/build/helpers/format-element.js.map
+++ b/node_modules/@testing-library/react-native/build/helpers/format-element.js.map
@@ -1 +1 @@
-{"version":3,"file":"format-element.js","names":["_prettyFormat","_interopRequireWildcard","require","_mapProps","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","formatElement","element","compact","highlight","mapProps","defaultMapProps","children","props","childrenToDisplay","undefined","prettyFormat","$$typeof","Symbol","for","type","plugins","ReactTestComponent","ReactElement","printFunctionName","printBasicPrototype","min","formatElementList","elements","options","length","map","join","formatJson","json","getElementJsonPlugin","test","val","serialize","config","indentation","depth","refs","printer","newVal"],"sources":["../../src/helpers/format-element.ts"],"sourcesContent":["import type { ReactTestInstance, ReactTestRendererJSON } from 'react-test-renderer';\nimport type { NewPlugin } from 'pretty-format';\nimport prettyFormat, { plugins } from 'pretty-format';\n\nimport type { MapPropsFunction } from './map-props';\nimport { defaultMapProps } from './map-props';\n\nexport type FormatElementOptions = {\n  /** Minimize used space. */\n  compact?: boolean;\n\n  /** Highlight the output. */\n  highlight?: boolean;\n\n  /** Filter or map props to display. */\n  mapProps?: MapPropsFunction | null;\n};\n\n/***\n * Format given element as a pretty-printed string.\n *\n * @param element Element to format.\n */\nexport function formatElement(\n  element: ReactTestInstance | null,\n  { compact, highlight = true, mapProps = defaultMapProps }: FormatElementOptions = {},\n) {\n  if (element == null) {\n    return '(null)';\n  }\n\n  const { children, ...props } = element.props;\n  const childrenToDisplay = typeof children === 'string' ? [children] : undefined;\n\n  return prettyFormat(\n    {\n      // This prop is needed persuade the prettyFormat that the element is\n      // a ReactTestRendererJSON instance, so it is formatted as JSX.\n      $$typeof: Symbol.for('react.test.json'),\n      type: `${element.type}`,\n      props: mapProps ? mapProps(props) : props,\n      children: childrenToDisplay,\n    },\n    // See: https://www.npmjs.com/package/pretty-format#usage-with-options\n    {\n      plugins: [plugins.ReactTestComponent, plugins.ReactElement],\n      printFunctionName: false,\n      printBasicPrototype: false,\n      highlight: highlight,\n      min: compact,\n    },\n  );\n}\n\nexport function formatElementList(elements: ReactTestInstance[], options?: FormatElementOptions) {\n  if (elements.length === 0) {\n    return '(no elements)';\n  }\n\n  return elements.map((element) => formatElement(element, options)).join('\\n');\n}\n\nexport function formatJson(\n  json: ReactTestRendererJSON | ReactTestRendererJSON[],\n  { compact, highlight = true, mapProps = defaultMapProps }: FormatElementOptions = {},\n) {\n  return prettyFormat(json, {\n    plugins: [getElementJsonPlugin(mapProps), plugins.ReactElement],\n    highlight: highlight,\n    printBasicPrototype: false,\n    min: compact,\n  });\n}\n\nfunction getElementJsonPlugin(mapProps?: MapPropsFunction | null): NewPlugin {\n  return {\n    test: (val) => plugins.ReactTestComponent.test(val),\n    serialize: (val, config, indentation, depth, refs, printer) => {\n      let newVal = val;\n      if (mapProps && val.props) {\n        newVal = { ...val, props: mapProps(val.props) };\n      }\n      return plugins.ReactTestComponent.serialize(\n        newVal,\n        config,\n        indentation,\n        depth,\n        refs,\n        printer,\n      );\n    },\n  };\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"format-element.js","names":["_prettyFormat","_interopRequireWildcard","require","_mapProps","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","formatElement","element","compact","highlight","mapProps","defaultMapProps","children","props","childrenToDisplay","undefined","prettyFormat","$$typeof","Symbol","for","type","plugins","ReactTestComponent","ReactElement","printFunctionName","printBasicPrototype","min","formatElementList","elements","options","length","map","join","formatJson","json","getElementJsonPlugin","test","val","serialize","config","indentation","depth","refs","printer","newVal"],"sources":["../../src/helpers/format-element.ts"],"sourcesContent":["import type { ReactTestInstance, ReactTestRendererJSON } from 'react-test-renderer';\nimport type { NewPlugin } from 'pretty-format';\nimport prettyFormat, { plugins } from 'pretty-format';\n\nimport type { MapPropsFunction } from './map-props';\nimport { defaultMapProps } from './map-props';\n\nexport type FormatElementOptions = {\n  /** Minimize used space. */\n  compact?: boolean;\n\n  /** Highlight the output. */\n  highlight?: boolean;\n\n  /** Filter or map props to display. */\n  mapProps?: MapPropsFunction | null;\n};\n\n/***\n * Format given element as a pretty-printed string.\n *\n * @param element Element to format.\n */\nexport function formatElement(\n  element: ReactTestInstance | null,\n  { compact, highlight = true, mapProps = defaultMapProps }: FormatElementOptions = {},\n) {\n  if (element == null) {\n    return '(null)';\n  }\n\n  const { children, ...props } = element.props;\n  const childrenToDisplay = typeof children === 'string' ? [children] : undefined;\n\n  return prettyFormat(\n    {\n      // This prop is needed persuade the prettyFormat that the element is\n      // a ReactTestRendererJSON instance, so it is formatted as JSX.\n      $$typeof: Symbol.for('react.test.json'),\n      type: `${element.type}`,\n      props: mapProps ? mapProps(props) : props,\n      children: childrenToDisplay,\n    },\n    // See: https://www.npmjs.com/package/pretty-format#usage-with-options\n    {\n      plugins: [plugins.ReactTestComponent, plugins.ReactElement],\n      printFunctionName: false,\n      printBasicPrototype: false,\n      highlight: highlight,\n      min: compact,\n    },\n  );\n}\n\nexport function formatElementList(elements: ReactTestInstance[], options?: FormatElementOptions) {\n  if (elements.length === 0) {\n    return '(no elements)';\n  }\n\n  return elements.map((element) => formatElement(element, options)).join('\\n');\n}\n\nexport function formatJson(\n  json: ReactTestRendererJSON | ReactTestRendererJSON[],\n  { compact, highlight = true, mapProps = defaultMapProps }: FormatElementOptions = {},\n) {\n  return prettyFormat(json, {\n    plugins: [getElementJsonPlugin(mapProps), plugins.ReactElement],\n    highlight: highlight,\n    printBasicPrototype: false,\n    min: compact,\n  });\n}\n\nfunction getElementJsonPlugin(mapProps?: MapPropsFunction | null): NewPlugin {\n  return {\n    test: (val) => plugins.ReactTestComponent.test(val),\n    serialize: (val, config, indentation, depth, refs, printer) => {\n      let newVal = val;\n      if (mapProps && val.props) {\n        newVal = { ...val, props: mapProps(val.props) };\n      }\n      return plugins.ReactTestComponent.serialize(\n        newVal,\n        config,\n        indentation,\n        depth,\n        refs,\n        printer,\n      );\n    },\n  };\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/helpers/logger.js b/node_modules/@testing-library/react-native/build/helpers/logger.js
index 468dbed..ea18222 100644
--- a/node_modules/@testing-library/react-native/build/helpers/logger.js
+++ b/node_modules/@testing-library/react-native/build/helpers/logger.js
@@ -8,8 +8,7 @@ var _chalk = _interopRequireDefault(require("chalk"));
 var nodeConsole = _interopRequireWildcard(require("console"));
 var _redent = _interopRequireDefault(require("redent"));
 var nodeUtil = _interopRequireWildcard(require("util"));
-function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
-function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
 function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
 const logger = exports.logger = {
   debug(message, ...args) {
diff --git a/node_modules/@testing-library/react-native/build/helpers/logger.js.map b/node_modules/@testing-library/react-native/build/helpers/logger.js.map
index 2775001..6013b4e 100644
--- a/node_modules/@testing-library/react-native/build/helpers/logger.js.map
+++ b/node_modules/@testing-library/react-native/build/helpers/logger.js.map
@@ -1 +1 @@
-{"version":3,"file":"logger.js","names":["_chalk","_interopRequireDefault","require","nodeConsole","_interopRequireWildcard","_redent","nodeUtil","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","logger","exports","debug","message","args","output","formatMessage","chalk","dim","info","warn","yellow","error","red","symbol","formatted","format","indented","redent","trimStart"],"sources":["../../src/helpers/logger.ts"],"sourcesContent":["import chalk from 'chalk';\nimport * as nodeConsole from 'console';\nimport redent from 'redent';\nimport * as nodeUtil from 'util';\n\nexport const logger = {\n  debug(message: unknown, ...args: unknown[]) {\n    const output = formatMessage('●', message, ...args);\n    nodeConsole.debug(chalk.dim(output));\n  },\n\n  info(message: unknown, ...args: unknown[]) {\n    const output = formatMessage('●', message, ...args);\n    nodeConsole.info(output);\n  },\n\n  warn(message: unknown, ...args: unknown[]) {\n    const output = formatMessage('▲', message, ...args);\n    nodeConsole.warn(chalk.yellow(output));\n  },\n\n  error(message: unknown, ...args: unknown[]) {\n    const output = formatMessage('■', message, ...args);\n    nodeConsole.error(chalk.red(output));\n  },\n};\n\nfunction formatMessage(symbol: string, message: unknown, ...args: unknown[]) {\n  const formatted = nodeUtil.format(message, ...args);\n  const indented = redent(formatted, 4);\n  return `  ${symbol} ${indented.trimStart()}\\n`;\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"logger.js","names":["_chalk","_interopRequireDefault","require","nodeConsole","_interopRequireWildcard","_redent","nodeUtil","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","logger","exports","debug","message","args","output","formatMessage","chalk","dim","info","warn","yellow","error","red","symbol","formatted","format","indented","redent","trimStart"],"sources":["../../src/helpers/logger.ts"],"sourcesContent":["import chalk from 'chalk';\nimport * as nodeConsole from 'console';\nimport redent from 'redent';\nimport * as nodeUtil from 'util';\n\nexport const logger = {\n  debug(message: unknown, ...args: unknown[]) {\n    const output = formatMessage('●', message, ...args);\n    nodeConsole.debug(chalk.dim(output));\n  },\n\n  info(message: unknown, ...args: unknown[]) {\n    const output = formatMessage('●', message, ...args);\n    nodeConsole.info(output);\n  },\n\n  warn(message: unknown, ...args: unknown[]) {\n    const output = formatMessage('▲', message, ...args);\n    nodeConsole.warn(chalk.yellow(output));\n  },\n\n  error(message: unknown, ...args: unknown[]) {\n    const output = formatMessage('■', message, ...args);\n    nodeConsole.error(chalk.red(output));\n  },\n};\n\nfunction formatMessage(symbol: string, message: unknown, ...args: unknown[]) {\n  const formatted = nodeUtil.format(message, ...args);\n  const indented = redent(formatted, 4);\n  return `  ${symbol} ${indented.trimStart()}\\n`;\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/helpers/matchers/match-accessibility-value.d.ts b/node_modules/@testing-library/react-native/build/helpers/matchers/match-accessibility-value.d.ts
index e6cb732..279fd4f 100644
--- a/node_modules/@testing-library/react-native/build/helpers/matchers/match-accessibility-value.d.ts
+++ b/node_modules/@testing-library/react-native/build/helpers/matchers/match-accessibility-value.d.ts
@@ -1,5 +1,5 @@
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { TextMatch } from '../../matches';
+import type { TextMatch } from '@testing-library/react-native/build/matches';
 export interface AccessibilityValueMatcher {
     min?: number;
     max?: number;
diff --git a/node_modules/@testing-library/react-native/build/index.d.ts b/node_modules/@testing-library/react-native/build/index.d.ts
index 5c123e8..aa6f92b 100644
--- a/node_modules/@testing-library/react-native/build/index.d.ts
+++ b/node_modules/@testing-library/react-native/build/index.d.ts
@@ -1,3 +1,3 @@
-import './helpers/ensure-peer-deps';
-import './matchers/extend-expect';
-export * from './pure';
+import '@testing-library/react-native/build/helpers/ensure-peer-deps';
+import '@testing-library/react-native/build/matchers/extend-expect';
+export * from '@testing-library/react-native/build/pure';
diff --git a/node_modules/@testing-library/react-native/build/index.js b/node_modules/@testing-library/react-native/build/index.js
index 06ea4b4..08e66bf 100644
--- a/node_modules/@testing-library/react-native/build/index.js
+++ b/node_modules/@testing-library/react-native/build/index.js
@@ -27,7 +27,7 @@ if (!process?.env?.RNTL_SKIP_AUTO_CLEANUP) {
   if (typeof afterEach === 'function') {
     afterEach(async () => {
       await (0, _flushMicroTasks.flushMicroTasks)();
-      (0, _pure.cleanup)();
+      await (0, _pure.cleanup)();
     });
   }
   if (typeof beforeAll === 'function' && typeof afterAll === 'function') {
diff --git a/node_modules/@testing-library/react-native/build/index.js.map b/node_modules/@testing-library/react-native/build/index.js.map
index eeea69d..6656b05 100644
--- a/node_modules/@testing-library/react-native/build/index.js.map
+++ b/node_modules/@testing-library/react-native/build/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","names":["require","_act","_flushMicroTasks","_pure","Object","keys","forEach","key","exports","defineProperty","enumerable","get","process","env","RNTL_SKIP_AUTO_CLEANUP","afterEach","flushMicroTasks","cleanup","beforeAll","afterAll","previousIsReactActEnvironment","getIsReactActEnvironment","setReactActEnvironment"],"sources":["../src/index.ts"],"sourcesContent":["import './helpers/ensure-peer-deps';\nimport './matchers/extend-expect';\n\nimport { getIsReactActEnvironment, setReactActEnvironment } from './act';\nimport { flushMicroTasks } from './flush-micro-tasks';\nimport { cleanup } from './pure';\n\nif (!process?.env?.RNTL_SKIP_AUTO_CLEANUP) {\n  // If we're running in a test runner that supports afterEach\n  // then we'll automatically run cleanup afterEach test\n  // this ensures that tests run in isolation from each other\n  // if you don't like this then either import the `pure` module\n  // or set the RNTL_SKIP_AUTO_CLEANUP env variable to 'true'.\n  if (typeof afterEach === 'function') {\n    afterEach(async () => {\n      await flushMicroTasks();\n      cleanup();\n    });\n  }\n\n  if (typeof beforeAll === 'function' && typeof afterAll === 'function') {\n    // This matches the behavior of React < 18.\n    let previousIsReactActEnvironment = getIsReactActEnvironment();\n    beforeAll(() => {\n      previousIsReactActEnvironment = getIsReactActEnvironment();\n      setReactActEnvironment(true);\n    });\n\n    afterAll(() => {\n      setReactActEnvironment(previousIsReactActEnvironment);\n    });\n  }\n}\n\nexport * from './pure';\n"],"mappings":";;;;;AAAAA,OAAA;AACAA,OAAA;AAEA,IAAAC,IAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAF,OAAA;AACA,IAAAG,KAAA,GAAAH,OAAA;AA6BAI,MAAA,CAAAC,IAAA,CAAAF,KAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAJ,KAAA,CAAAI,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAR,KAAA,CAAAI,GAAA;IAAA;EAAA;AAAA;AA3BA,IAAI,CAACK,OAAO,EAAEC,GAAG,EAAEC,sBAAsB,EAAE;EACzC;EACA;EACA;EACA;EACA;EACA,IAAI,OAAOC,SAAS,KAAK,UAAU,EAAE;IACnCA,SAAS,CAAC,YAAY;MACpB,MAAM,IAAAC,gCAAe,EAAC,CAAC;MACvB,IAAAC,aAAO,EAAC,CAAC;IACX,CAAC,CAAC;EACJ;EAEA,IAAI,OAAOC,SAAS,KAAK,UAAU,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAE;IACrE;IACA,IAAIC,6BAA6B,GAAG,IAAAC,6BAAwB,EAAC,CAAC;IAC9DH,SAAS,CAAC,MAAM;MACdE,6BAA6B,GAAG,IAAAC,6BAAwB,EAAC,CAAC;MAC1D,IAAAC,2BAAsB,EAAC,IAAI,CAAC;IAC9B,CAAC,CAAC;IAEFH,QAAQ,CAAC,MAAM;MACb,IAAAG,2BAAsB,EAACF,6BAA6B,CAAC;IACvD,CAAC,CAAC;EACJ;AACF","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"index.js","names":["require","_act","_flushMicroTasks","_pure","Object","keys","forEach","key","exports","defineProperty","enumerable","get","process","env","RNTL_SKIP_AUTO_CLEANUP","afterEach","flushMicroTasks","cleanup","beforeAll","afterAll","previousIsReactActEnvironment","getIsReactActEnvironment","setReactActEnvironment"],"sources":["../src/index.ts"],"sourcesContent":["import './helpers/ensure-peer-deps';\nimport './matchers/extend-expect';\n\nimport { getIsReactActEnvironment, setReactActEnvironment } from './act';\nimport { flushMicroTasks } from './flush-micro-tasks';\nimport { cleanup } from './pure';\n\nif (!process?.env?.RNTL_SKIP_AUTO_CLEANUP) {\n  // If we're running in a test runner that supports afterEach\n  // then we'll automatically run cleanup afterEach test\n  // this ensures that tests run in isolation from each other\n  // if you don't like this then either import the `pure` module\n  // or set the RNTL_SKIP_AUTO_CLEANUP env variable to 'true'.\n  if (typeof afterEach === 'function') {\n    afterEach(async () => {\n      await flushMicroTasks();\n      await cleanup();\n    });\n  }\n\n  if (typeof beforeAll === 'function' && typeof afterAll === 'function') {\n    // This matches the behavior of React < 18.\n    let previousIsReactActEnvironment = getIsReactActEnvironment();\n    beforeAll(() => {\n      previousIsReactActEnvironment = getIsReactActEnvironment();\n      setReactActEnvironment(true);\n    });\n\n    afterAll(() => {\n      setReactActEnvironment(previousIsReactActEnvironment);\n    });\n  }\n}\n\nexport * from './pure';\n"],"mappings":";;;;;AAAAA,OAAA;AACAA,OAAA;AAEA,IAAAC,IAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAF,OAAA;AACA,IAAAG,KAAA,GAAAH,OAAA;AA6BAI,MAAA,CAAAC,IAAA,CAAAF,KAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAJ,KAAA,CAAAI,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAR,KAAA,CAAAI,GAAA;IAAA;EAAA;AAAA;AA3BA,IAAI,CAACK,OAAO,EAAEC,GAAG,EAAEC,sBAAsB,EAAE;EACzC;EACA;EACA;EACA;EACA;EACA,IAAI,OAAOC,SAAS,KAAK,UAAU,EAAE;IACnCA,SAAS,CAAC,YAAY;MACpB,MAAM,IAAAC,gCAAe,EAAC,CAAC;MACvB,MAAM,IAAAC,aAAO,EAAC,CAAC;IACjB,CAAC,CAAC;EACJ;EAEA,IAAI,OAAOC,SAAS,KAAK,UAAU,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAE;IACrE;IACA,IAAIC,6BAA6B,GAAG,IAAAC,6BAAwB,EAAC,CAAC;IAC9DH,SAAS,CAAC,MAAM;MACdE,6BAA6B,GAAG,IAAAC,6BAAwB,EAAC,CAAC;MAC1D,IAAAC,2BAAsB,EAAC,IAAI,CAAC;IAC9B,CAAC,CAAC;IAEFH,QAAQ,CAAC,MAAM;MACb,IAAAG,2BAAsB,EAACF,6BAA6B,CAAC;IACvD,CAAC,CAAC;EACJ;AACF","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/matchers/extend-expect.d.ts b/node_modules/@testing-library/react-native/build/matchers/extend-expect.d.ts
index a2dddad..4ebc656 100644
--- a/node_modules/@testing-library/react-native/build/matchers/extend-expect.d.ts
+++ b/node_modules/@testing-library/react-native/build/matchers/extend-expect.d.ts
@@ -1 +1 @@
-export type * from './types';
+export type * from '@testing-library/react-native/build/matchers/types';
diff --git a/node_modules/@testing-library/react-native/build/matchers/types.d.ts b/node_modules/@testing-library/react-native/build/matchers/types.d.ts
index af3f15f..0f168fb 100644
--- a/node_modules/@testing-library/react-native/build/matchers/types.d.ts
+++ b/node_modules/@testing-library/react-native/build/matchers/types.d.ts
@@ -1,8 +1,8 @@
 import type { StyleProp } from 'react-native';
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { AccessibilityValueMatcher } from '../helpers/matchers/match-accessibility-value';
-import type { TextMatch, TextMatchOptions } from '../matches';
-import type { Style } from './to-have-style';
+import type { AccessibilityValueMatcher } from '@testing-library/react-native/build/helpers/matchers/match-accessibility-value';
+import type { TextMatch, TextMatchOptions } from '@testing-library/react-native/build/matches';
+import type { Style } from '@testing-library/react-native/build/matchers/to-have-style';
 export interface JestNativeMatchers<R> {
     /**
      * Assert whether a host element is present in the element tree (screen) or not.
diff --git a/node_modules/@testing-library/react-native/build/pure.d.ts b/node_modules/@testing-library/react-native/build/pure.d.ts
index 36ff98a..29a0fc6 100644
--- a/node_modules/@testing-library/react-native/build/pure.d.ts
+++ b/node_modules/@testing-library/react-native/build/pure.d.ts
@@ -1,17 +1,17 @@
-export { default as act } from './act';
-export { default as cleanup } from './cleanup';
-export { default as fireEvent } from './fire-event';
-export { default as render } from './render';
-export { default as waitFor } from './wait-for';
-export { default as waitForElementToBeRemoved } from './wait-for-element-to-be-removed';
-export { within, getQueriesForElement } from './within';
-export { configure, resetToDefaults } from './config';
-export { isHiddenFromAccessibility, isInaccessible } from './helpers/accessibility';
-export { getDefaultNormalizer } from './matches';
-export { renderHook } from './render-hook';
-export { screen } from './screen';
-export { userEvent } from './user-event';
-export type { RenderOptions, RenderResult, RenderResult as RenderAPI, DebugFunction, } from './render';
-export type { RenderHookOptions, RenderHookResult } from './render-hook';
-export type { Config } from './config';
-export type { UserEventConfig } from './user-event';
+export { default as act } from '@testing-library/react-native/build/act';
+export { default as cleanup } from '@testing-library/react-native/build/cleanup';
+export { default as fireEvent } from '@testing-library/react-native/build/fire-event';
+export { default as render } from '@testing-library/react-native/build/render';
+export { default as waitFor } from '@testing-library/react-native/build/wait-for';
+export { default as waitForElementToBeRemoved } from '@testing-library/react-native/build/wait-for-element-to-be-removed';
+export { within, getQueriesForElement } from '@testing-library/react-native/build/within';
+export { configure, resetToDefaults } from '@testing-library/react-native/build/config';
+export { isHiddenFromAccessibility, isInaccessible } from '@testing-library/react-native/build/helpers/accessibility';
+export { getDefaultNormalizer } from '@testing-library/react-native/build/matches';
+export { renderHook } from '@testing-library/react-native/build/render-hook';
+export { screen } from '@testing-library/react-native/build/screen';
+export { userEvent } from '@testing-library/react-native/build/user-event';
+export type { RenderOptions, RenderResult, RenderResult as RenderAPI, DebugFunction, } from '@testing-library/react-native/build/render';
+export type { RenderHookOptions, RenderHookResult } from '@testing-library/react-native/build/render-hook';
+export type { Config } from '@testing-library/react-native/build/config';
+export type { UserEventConfig } from '@testing-library/react-native/build/user-event';
diff --git a/node_modules/@testing-library/react-native/build/queries/make-queries.d.ts b/node_modules/@testing-library/react-native/build/queries/make-queries.d.ts
index 695aff9..9daffde 100644
--- a/node_modules/@testing-library/react-native/build/queries/make-queries.d.ts
+++ b/node_modules/@testing-library/react-native/build/queries/make-queries.d.ts
@@ -1,5 +1,5 @@
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { WaitForOptions } from '../wait-for';
+import type { WaitForOptions } from '@testing-library/react-native/build/wait-for';
 export type GetByQuery<Predicate, Options = void> = (predicate: Predicate, options?: Options) => ReactTestInstance;
 export type GetAllByQuery<Predicate, Options = void> = (predicate: Predicate, options?: Options) => ReactTestInstance[];
 export type QueryByQuery<Predicate, Options = void> = (predicate: Predicate, options?: Options) => ReactTestInstance | null;
diff --git a/node_modules/@testing-library/react-native/build/queries/options.d.ts b/node_modules/@testing-library/react-native/build/queries/options.d.ts
index a415329..fdcd60f 100644
--- a/node_modules/@testing-library/react-native/build/queries/options.d.ts
+++ b/node_modules/@testing-library/react-native/build/queries/options.d.ts
@@ -1,4 +1,4 @@
-import type { NormalizerFn } from '../matches';
+import type { NormalizerFn } from '@testing-library/react-native/build/matches';
 export type CommonQueryOptions = {
     /** Should query include elements hidden from accessibility. */
     includeHiddenElements?: boolean;
diff --git a/node_modules/@testing-library/react-native/build/queries/role.d.ts b/node_modules/@testing-library/react-native/build/queries/role.d.ts
index 10285b1..2e67f6f 100644
--- a/node_modules/@testing-library/react-native/build/queries/role.d.ts
+++ b/node_modules/@testing-library/react-native/build/queries/role.d.ts
@@ -1,11 +1,11 @@
 import type { AccessibilityRole, Role } from 'react-native';
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { AccessibilityStateMatcher } from '../helpers/matchers/match-accessibility-state';
-import type { AccessibilityValueMatcher } from '../helpers/matchers/match-accessibility-value';
-import type { TextMatch } from '../matches';
-import type { StringWithAutocomplete } from '../types';
-import type { FindAllByQuery, FindByQuery, GetAllByQuery, GetByQuery, QueryAllByQuery, QueryByQuery } from './make-queries';
-import type { CommonQueryOptions } from './options';
+import type { AccessibilityStateMatcher } from '@testing-library/react-native/build/helpers/matchers/match-accessibility-state';
+import type { AccessibilityValueMatcher } from '@testing-library/react-native/build/helpers/matchers/match-accessibility-value';
+import type { TextMatch } from '@testing-library/react-native/build/matches';
+import type { StringWithAutocomplete } from '@testing-library/react-native/build/types';
+import type { FindAllByQuery, FindByQuery, GetAllByQuery, GetByQuery, QueryAllByQuery, QueryByQuery } from '@testing-library/react-native/build/queries/make-queries';
+import type { CommonQueryOptions } from '@testing-library/react-native/build/queries/options';
 export type ByRoleMatcher = StringWithAutocomplete<AccessibilityRole | Role> | RegExp;
 export type ByRoleOptions = CommonQueryOptions & AccessibilityStateMatcher & {
     name?: TextMatch;
diff --git a/node_modules/@testing-library/react-native/build/react-versions.js b/node_modules/@testing-library/react-native/build/react-versions.js
index e21c41d..8748bd1 100644
--- a/node_modules/@testing-library/react-native/build/react-versions.js
+++ b/node_modules/@testing-library/react-native/build/react-versions.js
@@ -5,8 +5,7 @@ Object.defineProperty(exports, "__esModule", {
 });
 exports.checkReactVersionAtLeast = checkReactVersionAtLeast;
 var React = _interopRequireWildcard(require("react"));
-function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
-function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
 function checkReactVersionAtLeast(major, minor) {
   if (React.version === undefined) return false;
   const [actualMajor, actualMinor] = React.version.split('.').map(Number);
diff --git a/node_modules/@testing-library/react-native/build/react-versions.js.map b/node_modules/@testing-library/react-native/build/react-versions.js.map
index cf26bbd..85b7099 100644
--- a/node_modules/@testing-library/react-native/build/react-versions.js.map
+++ b/node_modules/@testing-library/react-native/build/react-versions.js.map
@@ -1 +1 @@
-{"version":3,"file":"react-versions.js","names":["React","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","checkReactVersionAtLeast","major","minor","version","undefined","actualMajor","actualMinor","split","map","Number"],"sources":["../src/react-versions.ts"],"sourcesContent":["import * as React from 'react';\n\nexport function checkReactVersionAtLeast(major: number, minor: number): boolean {\n  if (React.version === undefined) return false;\n  const [actualMajor, actualMinor] = React.version.split('.').map(Number);\n\n  return actualMajor > major || (actualMajor === major && actualMinor >= minor);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA+B,SAAAC,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAH,wBAAAG,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAExB,SAASW,wBAAwBA,CAACC,KAAa,EAAEC,KAAa,EAAW;EAC9E,IAAIzB,KAAK,CAAC0B,OAAO,KAAKC,SAAS,EAAE,OAAO,KAAK;EAC7C,MAAM,CAACC,WAAW,EAAEC,WAAW,CAAC,GAAG7B,KAAK,CAAC0B,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;EAEvE,OAAOJ,WAAW,GAAGJ,KAAK,IAAKI,WAAW,KAAKJ,KAAK,IAAIK,WAAW,IAAIJ,KAAM;AAC/E","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"react-versions.js","names":["React","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","checkReactVersionAtLeast","major","minor","version","undefined","actualMajor","actualMinor","split","map","Number"],"sources":["../src/react-versions.ts"],"sourcesContent":["import * as React from 'react';\n\nexport function checkReactVersionAtLeast(major: number, minor: number): boolean {\n  if (React.version === undefined) return false;\n  const [actualMajor, actualMinor] = React.version.split('.').map(Number);\n\n  return actualMajor > major || (actualMajor === major && actualMinor >= minor);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA+B,SAAAD,wBAAAE,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAJ,uBAAA,YAAAA,CAAAE,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAExB,SAASkB,wBAAwBA,CAACC,KAAa,EAAEC,KAAa,EAAW;EAC9E,IAAIxB,KAAK,CAACyB,OAAO,KAAKC,SAAS,EAAE,OAAO,KAAK;EAC7C,MAAM,CAACC,WAAW,EAAEC,WAAW,CAAC,GAAG5B,KAAK,CAACyB,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;EAEvE,OAAOJ,WAAW,GAAGJ,KAAK,IAAKI,WAAW,KAAKJ,KAAK,IAAIK,WAAW,IAAIJ,KAAM;AAC/E","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/render-act.d.ts b/node_modules/@testing-library/react-native/build/render-act.d.ts
index 6477668..ca0b026 100644
--- a/node_modules/@testing-library/react-native/build/render-act.d.ts
+++ b/node_modules/@testing-library/react-native/build/render-act.d.ts
@@ -1,2 +1,2 @@
 import type { ReactTestRenderer, TestRendererOptions } from 'react-test-renderer';
-export declare function renderWithAct(component: React.ReactElement, options?: Partial<TestRendererOptions>): ReactTestRenderer;
+export declare function renderWithAct(component: React.ReactElement, options?: Partial<TestRendererOptions>): Promise<ReactTestRenderer>;
diff --git a/node_modules/@testing-library/react-native/build/render-act.js b/node_modules/@testing-library/react-native/build/render-act.js
index 65b9335..4c02161 100644
--- a/node_modules/@testing-library/react-native/build/render-act.js
+++ b/node_modules/@testing-library/react-native/build/render-act.js
@@ -7,11 +7,11 @@ exports.renderWithAct = renderWithAct;
 var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));
 var _act = _interopRequireDefault(require("./act"));
 function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
-function renderWithAct(component, options) {
+async function renderWithAct(component, options) {
   let renderer;
 
   // This will be called synchronously.
-  void (0, _act.default)(() => {
+  await (0, _act.default)(async () => {
     // @ts-expect-error `TestRenderer.create` is not typed correctly
     renderer = _reactTestRenderer.default.create(component, options);
   });
diff --git a/node_modules/@testing-library/react-native/build/render-act.js.map b/node_modules/@testing-library/react-native/build/render-act.js.map
index e359984..6679fda 100644
--- a/node_modules/@testing-library/react-native/build/render-act.js.map
+++ b/node_modules/@testing-library/react-native/build/render-act.js.map
@@ -1 +1 @@
-{"version":3,"file":"render-act.js","names":["_reactTestRenderer","_interopRequireDefault","require","_act","e","__esModule","default","renderWithAct","component","options","renderer","act","TestRenderer","create"],"sources":["../src/render-act.ts"],"sourcesContent":["import type { ReactTestRenderer, TestRendererOptions } from 'react-test-renderer';\nimport TestRenderer from 'react-test-renderer';\n\nimport act from './act';\n\nexport function renderWithAct(\n  component: React.ReactElement,\n  options?: Partial<TestRendererOptions>,\n): ReactTestRenderer {\n  let renderer: ReactTestRenderer;\n\n  // This will be called synchronously.\n  void act(() => {\n    // @ts-expect-error `TestRenderer.create` is not typed correctly\n    renderer = TestRenderer.create(component, options);\n  });\n\n  // @ts-expect-error: `act` is synchronous, so `renderer` is already initialized here\n  return renderer;\n}\n"],"mappings":";;;;;;AACA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,IAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAwB,SAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEjB,SAASG,aAAaA,CAC3BC,SAA6B,EAC7BC,OAAsC,EACnB;EACnB,IAAIC,QAA2B;;EAE/B;EACA,KAAK,IAAAC,YAAG,EAAC,MAAM;IACb;IACAD,QAAQ,GAAGE,0BAAY,CAACC,MAAM,CAACL,SAAS,EAAEC,OAAO,CAAC;EACpD,CAAC,CAAC;;EAEF;EACA,OAAOC,QAAQ;AACjB","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"render-act.js","names":["_reactTestRenderer","_interopRequireDefault","require","_act","e","__esModule","default","renderWithAct","component","options","renderer","act","TestRenderer","create"],"sources":["../src/render-act.ts"],"sourcesContent":["import type { ReactTestRenderer, TestRendererOptions } from 'react-test-renderer';\nimport TestRenderer from 'react-test-renderer';\n\nimport act from './act';\n\nexport async function renderWithAct(\n  component: React.ReactElement,\n  options?: Partial<TestRendererOptions>,\n): Promise<ReactTestRenderer> {\n  let renderer: ReactTestRenderer;\n\n  // This will be called synchronously.\n  await act(async () => {\n    // @ts-expect-error `TestRenderer.create` is not typed correctly\n    renderer = TestRenderer.create(component, options);\n  });\n\n  // @ts-expect-error: `act` is synchronous, so `renderer` is already initialized here\n  return renderer;\n}\n"],"mappings":";;;;;;AACA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,IAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAwB,SAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEjB,eAAeG,aAAaA,CACjCC,SAA6B,EAC7BC,OAAsC,EACV;EAC5B,IAAIC,QAA2B;;EAE/B;EACA,MAAM,IAAAC,YAAG,EAAC,YAAY;IACpB;IACAD,QAAQ,GAAGE,0BAAY,CAACC,MAAM,CAACL,SAAS,EAAEC,OAAO,CAAC;EACpD,CAAC,CAAC;;EAEF;EACA,OAAOC,QAAQ;AACjB","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/render-hook.d.ts b/node_modules/@testing-library/react-native/build/render-hook.d.ts
index d530a0c..0a9997a 100644
--- a/node_modules/@testing-library/react-native/build/render-hook.d.ts
+++ b/node_modules/@testing-library/react-native/build/render-hook.d.ts
@@ -1,6 +1,6 @@
 import * as React from 'react';
 export type RenderHookResult<Result, Props> = {
-    rerender: (props: Props) => void;
+    rerender: (props: Props) => Promise<void>;
     result: React.MutableRefObject<Result>;
     unmount: () => void;
 };
@@ -20,4 +20,4 @@ export type RenderHookOptions<Props> = {
      */
     concurrentRoot?: boolean;
 };
-export declare function renderHook<Result, Props>(hookToRender: (props: Props) => Result, options?: RenderHookOptions<Props>): RenderHookResult<Result, Props>;
+export declare function renderHook<Result, Props>(hookToRender: (props: Props) => Result, options?: RenderHookOptions<Props>): Promise<RenderHookResult<Result, Props>>;
diff --git a/node_modules/@testing-library/react-native/build/render-hook.js b/node_modules/@testing-library/react-native/build/render-hook.js
index 99e3144..6df5e61 100644
--- a/node_modules/@testing-library/react-native/build/render-hook.js
+++ b/node_modules/@testing-library/react-native/build/render-hook.js
@@ -5,10 +5,9 @@ Object.defineProperty(exports, "__esModule", {
 });
 exports.renderHook = renderHook;
 var React = _interopRequireWildcard(require("react"));
-var _render = require("./render");
-function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
-function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
-function renderHook(hookToRender, options) {
+var _render = require("@testing-library/react-native/build/render");
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+async function renderHook(hookToRender, options) {
   const {
     initialProps,
     ...renderOptions
@@ -26,14 +25,14 @@ function renderHook(hookToRender, options) {
   const {
     rerender: componentRerender,
     unmount
-  } = (0, _render.renderInternal)(
+  } = await (0, _render.renderInternal)(
   /*#__PURE__*/
   // @ts-expect-error since option can be undefined, initialProps can be undefined when it should'nt
   React.createElement(TestComponent, {
     hookProps: initialProps
   }), renderOptions);
-  function rerender(hookProps) {
-    return componentRerender(/*#__PURE__*/React.createElement(TestComponent, {
+  async function rerender(hookProps) {
+    return await componentRerender(/*#__PURE__*/React.createElement(TestComponent, {
       hookProps: hookProps
     }));
   }
diff --git a/node_modules/@testing-library/react-native/build/render-hook.js.map b/node_modules/@testing-library/react-native/build/render-hook.js.map
index b4f3c99..271802a 100644
--- a/node_modules/@testing-library/react-native/build/render-hook.js.map
+++ b/node_modules/@testing-library/react-native/build/render-hook.js.map
@@ -1 +1 @@
-{"version":3,"file":"render-hook.js","names":["React","_interopRequireWildcard","require","_render","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","renderHook","hookToRender","options","initialProps","renderOptions","result","createRef","TestComponent","hookProps","renderResult","useEffect","current","rerender","componentRerender","unmount","renderInternal","createElement"],"sources":["../src/render-hook.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { renderInternal } from './render';\n\nexport type RenderHookResult<Result, Props> = {\n  rerender: (props: Props) => void;\n  result: React.MutableRefObject<Result>;\n  unmount: () => void;\n};\n\nexport type RenderHookOptions<Props> = {\n  /**\n   * The initial props to pass to the hook.\n   */\n  initialProps?: Props;\n\n  /**\n   * Pass a React Component as the wrapper option to have it rendered around the inner element. This is most useful for creating\n   * reusable custom render functions for common data providers.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  wrapper?: React.ComponentType<any>;\n\n  /**\n   * Set to `false` to disable concurrent rendering.\n   * Otherwise `renderHook` will default to concurrent rendering.\n   */\n  concurrentRoot?: boolean;\n};\n\nexport function renderHook<Result, Props>(\n  hookToRender: (props: Props) => Result,\n  options?: RenderHookOptions<Props>,\n): RenderHookResult<Result, Props> {\n  const { initialProps, ...renderOptions } = options ?? {};\n\n  const result: React.MutableRefObject<Result | null> = React.createRef();\n\n  function TestComponent({ hookProps }: { hookProps: Props }) {\n    const renderResult = hookToRender(hookProps);\n\n    React.useEffect(() => {\n      result.current = renderResult;\n    });\n\n    return null;\n  }\n\n  const { rerender: componentRerender, unmount } = renderInternal(\n    // @ts-expect-error since option can be undefined, initialProps can be undefined when it should'nt\n    <TestComponent hookProps={initialProps} />,\n    renderOptions,\n  );\n\n  function rerender(hookProps: Props) {\n    return componentRerender(<TestComponent hookProps={hookProps} />);\n  }\n\n  return {\n    // Result should already be set after the first render effects are run.\n    result: result as React.MutableRefObject<Result>,\n    rerender,\n    unmount,\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AAA0C,SAAAE,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAJ,wBAAAI,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AA4BnC,SAASW,UAAUA,CACxBC,YAAsC,EACtCC,OAAkC,EACD;EACjC,MAAM;IAAEC,YAAY;IAAE,GAAGC;EAAc,CAAC,GAAGF,OAAO,IAAI,CAAC,CAAC;EAExD,MAAMG,MAA6C,gBAAG7B,KAAK,CAAC8B,SAAS,CAAC,CAAC;EAEvE,SAASC,aAAaA,CAAC;IAAEC;EAAgC,CAAC,EAAE;IAC1D,MAAMC,YAAY,GAAGR,YAAY,CAACO,SAAS,CAAC;IAE5ChC,KAAK,CAACkC,SAAS,CAAC,MAAM;MACpBL,MAAM,CAACM,OAAO,GAAGF,YAAY;IAC/B,CAAC,CAAC;IAEF,OAAO,IAAI;EACb;EAEA,MAAM;IAAEG,QAAQ,EAAEC,iBAAiB;IAAEC;EAAQ,CAAC,GAAG,IAAAC,sBAAc;EAAA;EAC7D;EACAvC,KAAA,CAAAwC,aAAA,CAACT,aAAa;IAACC,SAAS,EAAEL;EAAa,CAAE,CAAC,EAC1CC,aACF,CAAC;EAED,SAASQ,QAAQA,CAACJ,SAAgB,EAAE;IAClC,OAAOK,iBAAiB,cAACrC,KAAA,CAAAwC,aAAA,CAACT,aAAa;MAACC,SAAS,EAAEA;IAAU,CAAE,CAAC,CAAC;EACnE;EAEA,OAAO;IACL;IACAH,MAAM,EAAEA,MAAwC;IAChDO,QAAQ;IACRE;EACF,CAAC;AACH","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"render-hook.js","names":["React","_interopRequireWildcard","require","_render","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","renderHook","hookToRender","options","initialProps","renderOptions","result","createRef","TestComponent","hookProps","renderResult","useEffect","current","rerender","componentRerender","unmount","renderInternal","createElement"],"sources":["../src/render-hook.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { renderInternal } from './render';\n\nexport type RenderHookResult<Result, Props> = {\n  rerender: (props: Props) => Promise<void>;\n  result: React.MutableRefObject<Result>;\n  unmount: () => void;\n};\n\nexport type RenderHookOptions<Props> = {\n  /**\n   * The initial props to pass to the hook.\n   */\n  initialProps?: Props;\n\n  /**\n   * Pass a React Component as the wrapper option to have it rendered around the inner element. This is most useful for creating\n   * reusable custom render functions for common data providers.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  wrapper?: React.ComponentType<any>;\n\n  /**\n   * Set to `false` to disable concurrent rendering.\n   * Otherwise `renderHook` will default to concurrent rendering.\n   */\n  concurrentRoot?: boolean;\n};\n\nexport async function renderHook<Result, Props>(\n  hookToRender: (props: Props) => Result,\n  options?: RenderHookOptions<Props>,\n): Promise<RenderHookResult<Result, Props>> {\n  const { initialProps, ...renderOptions } = options ?? {};\n\n  const result: React.MutableRefObject<Result | null> = React.createRef();\n\n  function TestComponent({ hookProps }: { hookProps: Props }) {\n    const renderResult = hookToRender(hookProps);\n\n    React.useEffect(() => {\n      result.current = renderResult;\n    });\n\n    return null;\n  }\n\n  const { rerender: componentRerender, unmount } = await renderInternal(\n    // @ts-expect-error since option can be undefined, initialProps can be undefined when it should'nt\n    <TestComponent hookProps={initialProps} />,\n    renderOptions,\n  );\n\n  async function rerender(hookProps: Props) {\n    return await componentRerender(<TestComponent hookProps={hookProps} />);\n  }\n\n  return {\n    // Result should already be set after the first render effects are run.\n    result: result as React.MutableRefObject<Result>,\n    rerender,\n    unmount,\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AAA0C,SAAAD,wBAAAG,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAL,uBAAA,YAAAA,CAAAG,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AA4BnC,eAAekB,UAAUA,CAC9BC,YAAsC,EACtCC,OAAkC,EACQ;EAC1C,MAAM;IAAEC,YAAY;IAAE,GAAGC;EAAc,CAAC,GAAGF,OAAO,IAAI,CAAC,CAAC;EAExD,MAAMG,MAA6C,gBAAG5B,KAAK,CAAC6B,SAAS,CAAC,CAAC;EAEvE,SAASC,aAAaA,CAAC;IAAEC;EAAgC,CAAC,EAAE;IAC1D,MAAMC,YAAY,GAAGR,YAAY,CAACO,SAAS,CAAC;IAE5C/B,KAAK,CAACiC,SAAS,CAAC,MAAM;MACpBL,MAAM,CAACM,OAAO,GAAGF,YAAY;IAC/B,CAAC,CAAC;IAEF,OAAO,IAAI;EACb;EAEA,MAAM;IAAEG,QAAQ,EAAEC,iBAAiB;IAAEC;EAAQ,CAAC,GAAG,MAAM,IAAAC,sBAAc;EAAA;EACnE;EACAtC,KAAA,CAAAuC,aAAA,CAACT,aAAa;IAACC,SAAS,EAAEL;EAAa,CAAE,CAAC,EAC1CC,aACF,CAAC;EAED,eAAeQ,QAAQA,CAACJ,SAAgB,EAAE;IACxC,OAAO,MAAMK,iBAAiB,cAACpC,KAAA,CAAAuC,aAAA,CAACT,aAAa;MAACC,SAAS,EAAEA;IAAU,CAAE,CAAC,CAAC;EACzE;EAEA,OAAO;IACL;IACAH,MAAM,EAAEA,MAAwC;IAChDO,QAAQ;IACRE;EACF,CAAC;AACH","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/render.d.ts b/node_modules/@testing-library/react-native/build/render.d.ts
index f40c46a..a0b8770 100644
--- a/node_modules/@testing-library/react-native/build/render.d.ts
+++ b/node_modules/@testing-library/react-native/build/render.d.ts
@@ -1,6 +1,6 @@
 import * as React from 'react';
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { DebugOptions } from './helpers/debug';
+import type { DebugOptions } from '@testing-library/react-native/build/helpers/debug';
 export interface RenderOptions {
     /**
      * Pass a React Component as the wrapper option to have it rendered around the inner element. This is most useful for creating
@@ -15,15 +15,15 @@ export interface RenderOptions {
     createNodeMock?: (element: React.ReactElement) => unknown;
     unstable_validateStringsRenderedWithinText?: boolean;
 }
-export type RenderResult = ReturnType<typeof render>;
+export type RenderResult = Awaited<ReturnType<typeof render>>;
 /**
  * Renders test component deeply using React Test Renderer and exposes helpers
  * to assert on the output.
  */
-export default function render<T>(component: React.ReactElement<T>, options?: RenderOptions): {
-    update: (component: React.ReactElement) => void;
-    unmount: () => void;
-    rerender: (component: React.ReactElement) => void;
+export default function render<T>(component: React.ReactElement<T>, options?: RenderOptions): Promise<{
+    update: (component: React.ReactElement) => Promise<void>;
+    unmount: () => Promise<void>;
+    rerender: (component: React.ReactElement) => Promise<void>;
     toJSON: () => null | import("react-test-renderer").ReactTestRendererJSON | import("react-test-renderer").ReactTestRendererJSON[];
     debug: DebugFunction;
     root: ReactTestInstance;
@@ -44,65 +44,65 @@ export default function render<T>(component: React.ReactElement<T>, options?: Re
     UNSAFE_getAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;
     UNSAFE_queryByType: <P>(type: React.ComponentType<P>) => ReactTestInstance | null;
     UNSAFE_queryAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;
-    getByRole: import("./queries/make-queries").GetByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    getAllByRole: import("./queries/make-queries").GetAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    queryByRole: import("./queries/make-queries").QueryByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    queryAllByRole: import("./queries/make-queries").QueryAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    findByRole: import("./queries/make-queries").FindByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    findAllByRole: import("./queries/make-queries").FindAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    getByHintText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByHintText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByHintText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByHintText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByHintText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByHintText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByA11yHint: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByA11yHint: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByA11yHint: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByA11yHint: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByA11yHint: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByA11yHint: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByAccessibilityHint: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByAccessibilityHint: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByAccessibilityHint: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByAccessibilityHint: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByAccessibilityHint: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByAccessibilityHint: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByLabelText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByLabelText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByLabelText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByLabelText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByLabelText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByLabelText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByPlaceholderText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByPlaceholderText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByPlaceholderText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByPlaceholderText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByPlaceholderText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByPlaceholderText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByDisplayValue: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByDisplayValue: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByDisplayValue: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByDisplayValue: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByDisplayValue: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByDisplayValue: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByTestId: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByTestId: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByTestId: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByTestId: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByTestId: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByTestId: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-};
-export declare function renderInternal<T>(component: React.ReactElement<T>, options?: RenderOptions): {
-    update: (component: React.ReactElement) => void;
-    unmount: () => void;
-    rerender: (component: React.ReactElement) => void;
+    getByRole: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    getAllByRole: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    queryByRole: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    queryAllByRole: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    findByRole: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    findAllByRole: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    getByHintText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByHintText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByHintText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByHintText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByHintText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByHintText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByA11yHint: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByA11yHint: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByA11yHint: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByLabelText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByLabelText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByLabelText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByTestId: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByTestId: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByTestId: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByTestId: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByTestId: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByTestId: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+}>;
+export declare function renderInternal<T>(component: React.ReactElement<T>, options?: RenderOptions): Promise<{
+    update: (component: React.ReactElement) => Promise<void>;
+    unmount: () => Promise<void>;
+    rerender: (component: React.ReactElement) => Promise<void>;
     toJSON: () => null | import("react-test-renderer").ReactTestRendererJSON | import("react-test-renderer").ReactTestRendererJSON[];
     debug: DebugFunction;
     root: ReactTestInstance;
@@ -123,59 +123,59 @@ export declare function renderInternal<T>(component: React.ReactElement<T>, opti
     UNSAFE_getAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;
     UNSAFE_queryByType: <P>(type: React.ComponentType<P>) => ReactTestInstance | null;
     UNSAFE_queryAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;
-    getByRole: import("./queries/make-queries").GetByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    getAllByRole: import("./queries/make-queries").GetAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    queryByRole: import("./queries/make-queries").QueryByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    queryAllByRole: import("./queries/make-queries").QueryAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    findByRole: import("./queries/make-queries").FindByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    findAllByRole: import("./queries/make-queries").FindAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    getByHintText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByHintText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByHintText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByHintText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByHintText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByHintText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByA11yHint: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByA11yHint: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByA11yHint: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByA11yHint: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByA11yHint: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByA11yHint: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByAccessibilityHint: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByAccessibilityHint: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByAccessibilityHint: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByAccessibilityHint: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByAccessibilityHint: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByAccessibilityHint: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByLabelText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByLabelText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByLabelText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByLabelText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByLabelText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByLabelText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByPlaceholderText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByPlaceholderText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByPlaceholderText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByPlaceholderText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByPlaceholderText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByPlaceholderText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByDisplayValue: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByDisplayValue: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByDisplayValue: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByDisplayValue: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByDisplayValue: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByDisplayValue: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByTestId: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByTestId: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByTestId: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByTestId: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByTestId: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByTestId: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-};
+    getByRole: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    getAllByRole: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    queryByRole: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    queryAllByRole: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    findByRole: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    findAllByRole: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    getByHintText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByHintText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByHintText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByHintText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByHintText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByHintText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByA11yHint: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByA11yHint: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByA11yHint: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByLabelText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByLabelText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByLabelText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByTestId: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByTestId: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByTestId: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByTestId: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByTestId: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByTestId: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+}>;
 export type DebugFunction = (options?: DebugOptions) => void;
diff --git a/node_modules/@testing-library/react-native/build/render.js b/node_modules/@testing-library/react-native/build/render.js
index 97fe935..b286e6a 100644
--- a/node_modules/@testing-library/react-native/build/render.js
+++ b/node_modules/@testing-library/react-native/build/render.js
@@ -16,8 +16,7 @@ var _renderAct = require("./render-act");
 var _screen = require("./screen");
 var _within = require("./within");
 function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
-function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
-function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
 /**
  * Renders test component deeply using React Test Renderer and exposes helpers
  * to assert on the output.
@@ -25,7 +24,7 @@ function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e;
 function render(component, options = {}) {
   return renderInternal(component, options);
 }
-function renderInternal(component, options) {
+async function renderInternal(component, options) {
   const {
     wrapper: Wrapper,
     concurrentRoot,
@@ -38,16 +37,16 @@ function renderInternal(component, options) {
     unstable_isConcurrent: concurrentRoot ?? (0, _config.getConfig)().concurrentRoot
   };
   if (unstable_validateStringsRenderedWithinText) {
-    return renderWithStringValidation(component, {
+    return await renderWithStringValidation(component, {
       wrapper: Wrapper,
       ...testRendererOptions
     });
   }
   const wrap = element => Wrapper ? /*#__PURE__*/React.createElement(Wrapper, null, element) : element;
-  const renderer = (0, _renderAct.renderWithAct)(wrap(component), testRendererOptions);
+  const renderer = await (0, _renderAct.renderWithAct)(wrap(component), testRendererOptions);
   return buildRenderResult(renderer, wrap);
 }
-function renderWithStringValidation(component, options = {}) {
+async function renderWithStringValidation(component, options = {}) {
   const {
     wrapper: Wrapper,
     ...testRendererOptions
@@ -61,15 +60,15 @@ function renderWithStringValidation(component, options = {}) {
       (0, _stringValidation.validateStringsRenderedWithinText)(renderer.toJSON());
     }
   };
-  const renderer = (0, _renderAct.renderWithAct)(wrap(component), testRendererOptions);
+  const renderer = await (0, _renderAct.renderWithAct)(wrap(component), testRendererOptions);
   (0, _stringValidation.validateStringsRenderedWithinText)(renderer.toJSON());
   return buildRenderResult(renderer, wrap);
 }
 function buildRenderResult(renderer, wrap) {
   const update = updateWithAct(renderer, wrap);
   const instance = renderer.root;
-  const unmount = () => {
-    void (0, _act.default)(() => {
+  const unmount = async () => {
+    await (0, _act.default)(async () => {
       renderer.unmount();
     });
   };
@@ -100,9 +99,9 @@ function buildRenderResult(renderer, wrap) {
   return result;
 }
 function updateWithAct(renderer, wrap) {
-  return function (component) {
-    void (0, _act.default)(() => {
-      renderer.update(wrap(component));
+  return async function (component) {
+    await (0, _act.default)(async () => {
+      await renderer.update(wrap(component));
     });
   };
 }
diff --git a/node_modules/@testing-library/react-native/build/render.js.map b/node_modules/@testing-library/react-native/build/render.js.map
index 3b7c525..d932f34 100644
--- a/node_modules/@testing-library/react-native/build/render.js.map
+++ b/node_modules/@testing-library/react-native/build/render.js.map
@@ -1 +1 @@
-{"version":3,"file":"render.js","names":["React","_interopRequireWildcard","require","_act","_interopRequireDefault","_cleanup","_config","_componentTree","_debug","_stringValidation","_renderAct","_screen","_within","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","render","component","options","renderInternal","wrapper","Wrapper","concurrentRoot","unstable_validateStringsRenderedWithinText","rest","testRendererOptions","unstable_isConcurrent","getConfig","renderWithStringValidation","wrap","element","createElement","renderer","renderWithAct","buildRenderResult","Profiler","id","onRender","handleRender","_","phase","validateStringsRenderedWithinText","toJSON","update","updateWithAct","instance","root","unmount","act","addToCleanupQueue","result","getQueriesForElement","rerender","debug","makeDebug","getHostSelves","UNSAFE_root","enumerable","Error","setRenderResult","debugImpl","defaultDebugOptions","debugOptions","json"],"sources":["../src/render.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  ReactTestInstance,\n  ReactTestRenderer,\n  TestRendererOptions,\n} from 'react-test-renderer';\n\nimport act from './act';\nimport { addToCleanupQueue } from './cleanup';\nimport { getConfig } from './config';\nimport { getHostSelves } from './helpers/component-tree';\nimport type { DebugOptions } from './helpers/debug';\nimport { debug } from './helpers/debug';\nimport { validateStringsRenderedWithinText } from './helpers/string-validation';\nimport { renderWithAct } from './render-act';\nimport { setRenderResult } from './screen';\nimport { getQueriesForElement } from './within';\n\nexport interface RenderOptions {\n  /**\n   * Pass a React Component as the wrapper option to have it rendered around the inner element. This is most useful for creating\n   * reusable custom render functions for common data providers.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  wrapper?: React.ComponentType<any>;\n\n  /**\n   * Set to `false` to disable concurrent rendering.\n   * Otherwise `render` will default to concurrent rendering.\n   */\n  concurrentRoot?: boolean;\n\n  createNodeMock?: (element: React.ReactElement) => unknown;\n  unstable_validateStringsRenderedWithinText?: boolean;\n}\n\nexport type RenderResult = ReturnType<typeof render>;\n\n/**\n * Renders test component deeply using React Test Renderer and exposes helpers\n * to assert on the output.\n */\nexport default function render<T>(component: React.ReactElement<T>, options: RenderOptions = {}) {\n  return renderInternal(component, options);\n}\n\nexport function renderInternal<T>(component: React.ReactElement<T>, options?: RenderOptions) {\n  const {\n    wrapper: Wrapper,\n    concurrentRoot,\n    unstable_validateStringsRenderedWithinText,\n    ...rest\n  } = options || {};\n\n  const testRendererOptions: TestRendererOptions = {\n    ...rest,\n    // @ts-expect-error incomplete typing on RTR package\n    unstable_isConcurrent: concurrentRoot ?? getConfig().concurrentRoot,\n  };\n\n  if (unstable_validateStringsRenderedWithinText) {\n    return renderWithStringValidation(component, {\n      wrapper: Wrapper,\n      ...testRendererOptions,\n    });\n  }\n\n  const wrap = (element: React.ReactElement) => (Wrapper ? <Wrapper>{element}</Wrapper> : element);\n  const renderer = renderWithAct(wrap(component), testRendererOptions);\n  return buildRenderResult(renderer, wrap);\n}\n\nfunction renderWithStringValidation<T>(\n  component: React.ReactElement<T>,\n  options: Omit<RenderOptions, 'unstable_validateStringsRenderedWithinText'> = {},\n) {\n  const { wrapper: Wrapper, ...testRendererOptions } = options ?? {};\n\n  const wrap = (element: React.ReactElement) => (\n    <React.Profiler id=\"renderProfiler\" onRender={handleRender}>\n      {Wrapper ? <Wrapper>{element}</Wrapper> : element}\n    </React.Profiler>\n  );\n\n  const handleRender: React.ProfilerOnRenderCallback = (_, phase) => {\n    if (renderer && phase === 'update') {\n      validateStringsRenderedWithinText(renderer.toJSON());\n    }\n  };\n\n  const renderer: ReactTestRenderer = renderWithAct(wrap(component), testRendererOptions);\n  validateStringsRenderedWithinText(renderer.toJSON());\n\n  return buildRenderResult(renderer, wrap);\n}\n\nfunction buildRenderResult(\n  renderer: ReactTestRenderer,\n  wrap: (element: React.ReactElement) => React.JSX.Element,\n) {\n  const update = updateWithAct(renderer, wrap);\n  const instance = renderer.root;\n\n  const unmount = () => {\n    void act(() => {\n      renderer.unmount();\n    });\n  };\n\n  addToCleanupQueue(unmount);\n\n  const result = {\n    ...getQueriesForElement(instance),\n    update,\n    unmount,\n    rerender: update, // alias for `update`\n    toJSON: renderer.toJSON,\n    debug: makeDebug(renderer),\n    get root(): ReactTestInstance {\n      return getHostSelves(instance)[0];\n    },\n    UNSAFE_root: instance,\n  };\n\n  // Add as non-enumerable property, so that it's safe to enumerate\n  // `render` result, e.g. using destructuring rest syntax.\n  Object.defineProperty(result, 'container', {\n    enumerable: false,\n    get() {\n      throw new Error(\n        \"'container' property has been renamed to 'UNSAFE_root'.\\n\\n\" +\n          \"Consider using 'root' property which returns root host element.\",\n      );\n    },\n  });\n\n  setRenderResult(result);\n\n  return result;\n}\n\nfunction updateWithAct(\n  renderer: ReactTestRenderer,\n  wrap: (innerElement: React.ReactElement) => React.ReactElement,\n) {\n  return function (component: React.ReactElement) {\n    void act(() => {\n      renderer.update(wrap(component));\n    });\n  };\n}\n\nexport type DebugFunction = (options?: DebugOptions) => void;\n\nfunction makeDebug(renderer: ReactTestRenderer): DebugFunction {\n  function debugImpl(options?: DebugOptions) {\n    const { defaultDebugOptions } = getConfig();\n    const debugOptions = { ...defaultDebugOptions, ...options };\n    const json = renderer.toJSON();\n    if (json) {\n      return debug(json, debugOptions);\n    }\n  }\n  return debugImpl;\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"render.js","names":["React","_interopRequireWildcard","require","_act","_interopRequireDefault","_cleanup","_config","_componentTree","_debug","_stringValidation","_renderAct","_screen","_within","e","__esModule","default","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","render","component","options","renderInternal","wrapper","Wrapper","concurrentRoot","unstable_validateStringsRenderedWithinText","rest","testRendererOptions","unstable_isConcurrent","getConfig","renderWithStringValidation","wrap","element","createElement","renderer","renderWithAct","buildRenderResult","Profiler","id","onRender","handleRender","_","phase","validateStringsRenderedWithinText","toJSON","update","updateWithAct","instance","root","unmount","act","addToCleanupQueue","result","getQueriesForElement","rerender","debug","makeDebug","getHostSelves","UNSAFE_root","enumerable","Error","setRenderResult","debugImpl","defaultDebugOptions","debugOptions","json"],"sources":["../src/render.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  ReactTestInstance,\n  ReactTestRenderer,\n  TestRendererOptions,\n} from 'react-test-renderer';\n\nimport act from './act';\nimport { addToCleanupQueue } from './cleanup';\nimport { getConfig } from './config';\nimport { getHostSelves } from './helpers/component-tree';\nimport type { DebugOptions } from './helpers/debug';\nimport { debug } from './helpers/debug';\nimport { validateStringsRenderedWithinText } from './helpers/string-validation';\nimport { renderWithAct } from './render-act';\nimport { setRenderResult } from './screen';\nimport { getQueriesForElement } from './within';\n\nexport interface RenderOptions {\n  /**\n   * Pass a React Component as the wrapper option to have it rendered around the inner element. This is most useful for creating\n   * reusable custom render functions for common data providers.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  wrapper?: React.ComponentType<any>;\n\n  /**\n   * Set to `false` to disable concurrent rendering.\n   * Otherwise `render` will default to concurrent rendering.\n   */\n  concurrentRoot?: boolean;\n\n  createNodeMock?: (element: React.ReactElement) => unknown;\n  unstable_validateStringsRenderedWithinText?: boolean;\n}\n\nexport type RenderResult = Awaited<ReturnType<typeof render>>;\n\n/**\n * Renders test component deeply using React Test Renderer and exposes helpers\n * to assert on the output.\n */\nexport default function render<T>(component: React.ReactElement<T>, options: RenderOptions = {}) {\n  return renderInternal(component, options);\n}\n\nexport async function renderInternal<T>(component: React.ReactElement<T>, options?: RenderOptions) {\n  const {\n    wrapper: Wrapper,\n    concurrentRoot,\n    unstable_validateStringsRenderedWithinText,\n    ...rest\n  } = options || {};\n\n  const testRendererOptions: TestRendererOptions = {\n    ...rest,\n    // @ts-expect-error incomplete typing on RTR package\n    unstable_isConcurrent: concurrentRoot ?? getConfig().concurrentRoot,\n  };\n\n  if (unstable_validateStringsRenderedWithinText) {\n    return await renderWithStringValidation(component, {\n      wrapper: Wrapper,\n      ...testRendererOptions,\n    });\n  }\n\n  const wrap = (element: React.ReactElement) => (Wrapper ? <Wrapper>{element}</Wrapper> : element);\n  const renderer = await renderWithAct(wrap(component), testRendererOptions);\n  return buildRenderResult(renderer, wrap);\n}\n\nasync function renderWithStringValidation<T>(\n  component: React.ReactElement<T>,\n  options: Omit<RenderOptions, 'unstable_validateStringsRenderedWithinText'> = {},\n) {\n  const { wrapper: Wrapper, ...testRendererOptions } = options ?? {};\n\n  const wrap = (element: React.ReactElement) => (\n    <React.Profiler id=\"renderProfiler\" onRender={handleRender}>\n      {Wrapper ? <Wrapper>{element}</Wrapper> : element}\n    </React.Profiler>\n  );\n\n  const handleRender: React.ProfilerOnRenderCallback = (_, phase) => {\n    if (renderer && phase === 'update') {\n      validateStringsRenderedWithinText(renderer.toJSON());\n    }\n  };\n\n  const renderer: ReactTestRenderer = await renderWithAct(wrap(component), testRendererOptions);\n  validateStringsRenderedWithinText(renderer.toJSON());\n\n  return buildRenderResult(renderer, wrap);\n}\n\nfunction buildRenderResult(\n  renderer: ReactTestRenderer,\n  wrap: (element: React.ReactElement) => React.JSX.Element,\n) {\n  const update = updateWithAct(renderer, wrap);\n  const instance = renderer.root;\n\n  const unmount = async () => {\n    await act(async () => {\n      renderer.unmount();\n    });\n  };\n\n  addToCleanupQueue(unmount);\n\n  const result = {\n    ...getQueriesForElement(instance),\n    update,\n    unmount,\n    rerender: update, // alias for `update`\n    toJSON: renderer.toJSON,\n    debug: makeDebug(renderer),\n    get root(): ReactTestInstance {\n      return getHostSelves(instance)[0];\n    },\n    UNSAFE_root: instance,\n  };\n\n  // Add as non-enumerable property, so that it's safe to enumerate\n  // `render` result, e.g. using destructuring rest syntax.\n  Object.defineProperty(result, 'container', {\n    enumerable: false,\n    get() {\n      throw new Error(\n        \"'container' property has been renamed to 'UNSAFE_root'.\\n\\n\" +\n          \"Consider using 'root' property which returns root host element.\",\n      );\n    },\n  });\n\n  setRenderResult(result);\n\n  return result;\n}\n\nfunction updateWithAct(\n  renderer: ReactTestRenderer,\n  wrap: (innerElement: React.ReactElement) => React.ReactElement,\n) {\n  return async function (component: React.ReactElement) {\n    await act(async () => {\n      await renderer.update(wrap(component));\n    });\n  };\n}\n\nexport type DebugFunction = (options?: DebugOptions) => void;\n\nfunction makeDebug(renderer: ReactTestRenderer): DebugFunction {\n  function debugImpl(options?: DebugOptions) {\n    const { defaultDebugOptions } = getConfig();\n    const debugOptions = { ...defaultDebugOptions, ...options };\n    const json = renderer.toJSON();\n    if (json) {\n      return debug(json, debugOptions);\n    }\n  }\n  return debugImpl;\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/screen.d.ts b/node_modules/@testing-library/react-native/build/screen.d.ts
index 7560b5b..f7b93c7 100644
--- a/node_modules/@testing-library/react-native/build/screen.d.ts
+++ b/node_modules/@testing-library/react-native/build/screen.d.ts
@@ -1,4 +1,4 @@
-import type { RenderResult } from './render';
+import type { RenderResult } from '@testing-library/react-native/build/render';
 interface Screen extends RenderResult {
     isDetached?: boolean;
 }
diff --git a/node_modules/@testing-library/react-native/build/tsconfig.release.tsbuildinfo b/node_modules/@testing-library/react-native/build/tsconfig.release.tsbuildinfo
index 642a924..71de8cb 100644
--- a/node_modules/@testing-library/react-native/build/tsconfig.release.tsbuildinfo
+++ b/node_modules/@testing-library/react-native/build/tsconfig.release.tsbuildinfo
@@ -1 +1 @@
-{"root":["../src/act.ts","../src/cleanup.ts","../src/config.ts","../src/event-handler.ts","../src/fire-event.ts","../src/flush-micro-tasks.ts","../src/index.ts","../src/matches.ts","../src/native-state.ts","../src/pure.ts","../src/react-versions.ts","../src/render-act.ts","../src/render-hook.tsx","../src/render.tsx","../src/screen.ts","../src/types.ts","../src/wait-for-element-to-be-removed.ts","../src/wait-for.ts","../src/within.ts","../src/helpers/accessibility.ts","../src/helpers/component-tree.ts","../src/helpers/debug.ts","../src/helpers/ensure-peer-deps.ts","../src/helpers/errors.ts","../src/helpers/find-all.ts","../src/helpers/format-element.ts","../src/helpers/host-component-names.ts","../src/helpers/logger.ts","../src/helpers/map-props.ts","../src/helpers/object.ts","../src/helpers/pointer-events.ts","../src/helpers/string-validation.ts","../src/helpers/text-content.ts","../src/helpers/text-input.ts","../src/helpers/timers.ts","../src/helpers/wrap-async.ts","../src/helpers/matchers/match-accessibility-state.ts","../src/helpers/matchers/match-accessibility-value.ts","../src/helpers/matchers/match-array-prop.ts","../src/helpers/matchers/match-label-text.ts","../src/helpers/matchers/match-object-prop.ts","../src/helpers/matchers/match-string-prop.ts","../src/helpers/matchers/match-text-content.ts","../src/matchers/extend-expect.ts","../src/matchers/index.ts","../src/matchers/to-be-busy.ts","../src/matchers/to-be-checked.ts","../src/matchers/to-be-disabled.ts","../src/matchers/to-be-empty-element.ts","../src/matchers/to-be-expanded.ts","../src/matchers/to-be-on-the-screen.ts","../src/matchers/to-be-partially-checked.ts","../src/matchers/to-be-selected.ts","../src/matchers/to-be-visible.ts","../src/matchers/to-contain-element.ts","../src/matchers/to-have-accessibility-value.ts","../src/matchers/to-have-accessible-name.ts","../src/matchers/to-have-display-value.ts","../src/matchers/to-have-prop.ts","../src/matchers/to-have-style.ts","../src/matchers/to-have-text-content.ts","../src/matchers/types.ts","../src/matchers/utils.ts","../src/queries/display-value.ts","../src/queries/hint-text.ts","../src/queries/label-text.ts","../src/queries/make-queries.ts","../src/queries/options.ts","../src/queries/placeholder-text.ts","../src/queries/role.ts","../src/queries/test-id.ts","../src/queries/text.ts","../src/queries/unsafe-props.ts","../src/queries/unsafe-type.ts","../src/test-utils/events.ts","../src/test-utils/index.ts","../src/user-event/clear.ts","../src/user-event/index.ts","../src/user-event/paste.ts","../src/user-event/event-builder/base.ts","../src/user-event/event-builder/common.ts","../src/user-event/event-builder/index.ts","../src/user-event/event-builder/scroll-view.ts","../src/user-event/event-builder/text-input.ts","../src/user-event/press/index.ts","../src/user-event/press/press.ts","../src/user-event/scroll/index.ts","../src/user-event/scroll/scroll-to.ts","../src/user-event/scroll/utils.ts","../src/user-event/setup/index.ts","../src/user-event/setup/setup.ts","../src/user-event/type/index.ts","../src/user-event/type/parse-keys.ts","../src/user-event/type/type.ts","../src/user-event/utils/content-size.ts","../src/user-event/utils/dispatch-event.ts","../src/user-event/utils/index.ts","../src/user-event/utils/text-range.ts","../src/user-event/utils/wait.ts"],"version":"5.7.3"}
\ No newline at end of file
+{"root":["../src/act.ts","../src/cleanup.ts","../src/config.ts","../src/event-handler.ts","../src/fire-event.ts","../src/flush-micro-tasks.ts","../src/index.ts","../src/matches.ts","../src/native-state.ts","../src/pure.ts","../src/react-versions.ts","../src/render-act.ts","../src/render-hook.tsx","../src/render.tsx","../src/screen.ts","../src/types.ts","../src/wait-for-element-to-be-removed.ts","../src/wait-for.ts","../src/within.ts","../src/helpers/accessibility.ts","../src/helpers/component-tree.ts","../src/helpers/debug.ts","../src/helpers/ensure-peer-deps.ts","../src/helpers/errors.ts","../src/helpers/find-all.ts","../src/helpers/format-element.ts","../src/helpers/host-component-names.ts","../src/helpers/logger.ts","../src/helpers/map-props.ts","../src/helpers/object.ts","../src/helpers/pointer-events.ts","../src/helpers/string-validation.ts","../src/helpers/text-content.ts","../src/helpers/text-input.ts","../src/helpers/timers.ts","../src/helpers/wrap-async.ts","../src/helpers/matchers/match-accessibility-state.ts","../src/helpers/matchers/match-accessibility-value.ts","../src/helpers/matchers/match-array-prop.ts","../src/helpers/matchers/match-label-text.ts","../src/helpers/matchers/match-object-prop.ts","../src/helpers/matchers/match-string-prop.ts","../src/helpers/matchers/match-text-content.ts","../src/matchers/extend-expect.ts","../src/matchers/index.ts","../src/matchers/to-be-busy.ts","../src/matchers/to-be-checked.ts","../src/matchers/to-be-disabled.ts","../src/matchers/to-be-empty-element.ts","../src/matchers/to-be-expanded.ts","../src/matchers/to-be-on-the-screen.ts","../src/matchers/to-be-partially-checked.ts","../src/matchers/to-be-selected.ts","../src/matchers/to-be-visible.ts","../src/matchers/to-contain-element.ts","../src/matchers/to-have-accessibility-value.ts","../src/matchers/to-have-accessible-name.ts","../src/matchers/to-have-display-value.ts","../src/matchers/to-have-prop.ts","../src/matchers/to-have-style.ts","../src/matchers/to-have-text-content.ts","../src/matchers/types.ts","../src/matchers/utils.ts","../src/queries/display-value.ts","../src/queries/hint-text.ts","../src/queries/label-text.ts","../src/queries/make-queries.ts","../src/queries/options.ts","../src/queries/placeholder-text.ts","../src/queries/role.ts","../src/queries/test-id.ts","../src/queries/text.ts","../src/queries/unsafe-props.ts","../src/queries/unsafe-type.ts","../src/test-utils/events.ts","../src/test-utils/index.ts","../src/user-event/clear.ts","../src/user-event/index.ts","../src/user-event/paste.ts","../src/user-event/event-builder/base.ts","../src/user-event/event-builder/common.ts","../src/user-event/event-builder/index.ts","../src/user-event/event-builder/scroll-view.ts","../src/user-event/event-builder/text-input.ts","../src/user-event/press/index.ts","../src/user-event/press/press.ts","../src/user-event/scroll/index.ts","../src/user-event/scroll/scroll-to.ts","../src/user-event/scroll/utils.ts","../src/user-event/setup/index.ts","../src/user-event/setup/setup.ts","../src/user-event/type/index.ts","../src/user-event/type/parse-keys.ts","../src/user-event/type/type.ts","../src/user-event/utils/content-size.ts","../src/user-event/utils/dispatch-event.ts","../src/user-event/utils/index.ts","../src/user-event/utils/text-range.ts","../src/user-event/utils/wait.ts"],"version":"5.8.3"}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/clear.js b/node_modules/@testing-library/react-native/build/user-event/clear.js
index a3c81b2..8711ecd 100644
--- a/node_modules/@testing-library/react-native/build/user-event/clear.js
+++ b/node_modules/@testing-library/react-native/build/user-event/clear.js
@@ -20,7 +20,7 @@ async function clear(element) {
   }
 
   // 1. Enter element
-  (0, _utils.dispatchEvent)(element, 'focus', _eventBuilder.EventBuilder.Common.focus());
+  await (0, _utils.dispatchEvent)(element, 'focus', _eventBuilder.EventBuilder.Common.focus());
 
   // 2. Select all
   const textToClear = (0, _textInput.getTextInputValue)(element);
@@ -28,7 +28,7 @@ async function clear(element) {
     start: 0,
     end: textToClear.length
   };
-  (0, _utils.dispatchEvent)(element, 'selectionChange', _eventBuilder.EventBuilder.TextInput.selectionChange(selectionRange));
+  await (0, _utils.dispatchEvent)(element, 'selectionChange', _eventBuilder.EventBuilder.TextInput.selectionChange(selectionRange));
 
   // 3. Press backspace with selected text
   const emptyText = '';
@@ -40,7 +40,7 @@ async function clear(element) {
 
   // 4. Exit element
   await (0, _utils.wait)(this.config);
-  (0, _utils.dispatchEvent)(element, 'endEditing', _eventBuilder.EventBuilder.TextInput.endEditing(emptyText));
-  (0, _utils.dispatchEvent)(element, 'blur', _eventBuilder.EventBuilder.Common.blur());
+  await (0, _utils.dispatchEvent)(element, 'endEditing', _eventBuilder.EventBuilder.TextInput.endEditing(emptyText));
+  await (0, _utils.dispatchEvent)(element, 'blur', _eventBuilder.EventBuilder.Common.blur());
 }
 //# sourceMappingURL=clear.js.map
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/clear.js.map b/node_modules/@testing-library/react-native/build/user-event/clear.js.map
index 79999a7..9a64d4e 100644
--- a/node_modules/@testing-library/react-native/build/user-event/clear.js.map
+++ b/node_modules/@testing-library/react-native/build/user-event/clear.js.map
@@ -1 +1 @@
-{"version":3,"file":"clear.js","names":["_errors","require","_hostComponentNames","_pointerEvents","_textInput","_eventBuilder","_type","_utils","clear","element","isHostTextInput","ErrorWithStack","type","isEditableTextInput","isPointerEventEnabled","dispatchEvent","EventBuilder","Common","focus","textToClear","getTextInputValue","selectionRange","start","end","length","TextInput","selectionChange","emptyText","emitTypingEvents","config","key","text","wait","endEditing","blur"],"sources":["../../src/user-event/clear.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport { ErrorWithStack } from '../helpers/errors';\nimport { isHostTextInput } from '../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../helpers/pointer-events';\nimport { getTextInputValue, isEditableTextInput } from '../helpers/text-input';\nimport { EventBuilder } from './event-builder';\nimport type { UserEventInstance } from './setup';\nimport { emitTypingEvents } from './type/type';\nimport { dispatchEvent, wait } from './utils';\n\nexport async function clear(this: UserEventInstance, element: ReactTestInstance): Promise<void> {\n  if (!isHostTextInput(element)) {\n    throw new ErrorWithStack(\n      `clear() only supports host \"TextInput\" elements. Passed element has type: \"${element.type}\".`,\n      clear,\n    );\n  }\n\n  if (!isEditableTextInput(element) || !isPointerEventEnabled(element)) {\n    return;\n  }\n\n  // 1. Enter element\n  dispatchEvent(element, 'focus', EventBuilder.Common.focus());\n\n  // 2. Select all\n  const textToClear = getTextInputValue(element);\n  const selectionRange = {\n    start: 0,\n    end: textToClear.length,\n  };\n  dispatchEvent(element, 'selectionChange', EventBuilder.TextInput.selectionChange(selectionRange));\n\n  // 3. Press backspace with selected text\n  const emptyText = '';\n  await emitTypingEvents(element, {\n    config: this.config,\n    key: 'Backspace',\n    text: emptyText,\n  });\n\n  // 4. Exit element\n  await wait(this.config);\n  dispatchEvent(element, 'endEditing', EventBuilder.TextInput.endEditing(emptyText));\n  dispatchEvent(element, 'blur', EventBuilder.Common.blur());\n}\n"],"mappings":";;;;;;AAEA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AAEA,IAAAK,KAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AAEO,eAAeO,KAAKA,CAA0BC,OAA0B,EAAiB;EAC9F,IAAI,CAAC,IAAAC,mCAAe,EAACD,OAAO,CAAC,EAAE;IAC7B,MAAM,IAAIE,sBAAc,CACtB,8EAA8EF,OAAO,CAACG,IAAI,IAAI,EAC9FJ,KACF,CAAC;EACH;EAEA,IAAI,CAAC,IAAAK,8BAAmB,EAACJ,OAAO,CAAC,IAAI,CAAC,IAAAK,oCAAqB,EAACL,OAAO,CAAC,EAAE;IACpE;EACF;;EAEA;EACA,IAAAM,oBAAa,EAACN,OAAO,EAAE,OAAO,EAAEO,0BAAY,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMC,WAAW,GAAG,IAAAC,4BAAiB,EAACX,OAAO,CAAC;EAC9C,MAAMY,cAAc,GAAG;IACrBC,KAAK,EAAE,CAAC;IACRC,GAAG,EAAEJ,WAAW,CAACK;EACnB,CAAC;EACD,IAAAT,oBAAa,EAACN,OAAO,EAAE,iBAAiB,EAAEO,0BAAY,CAACS,SAAS,CAACC,eAAe,CAACL,cAAc,CAAC,CAAC;;EAEjG;EACA,MAAMM,SAAS,GAAG,EAAE;EACpB,MAAM,IAAAC,sBAAgB,EAACnB,OAAO,EAAE;IAC9BoB,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,GAAG,EAAE,WAAW;IAChBC,IAAI,EAAEJ;EACR,CAAC,CAAC;;EAEF;EACA,MAAM,IAAAK,WAAI,EAAC,IAAI,CAACH,MAAM,CAAC;EACvB,IAAAd,oBAAa,EAACN,OAAO,EAAE,YAAY,EAAEO,0BAAY,CAACS,SAAS,CAACQ,UAAU,CAACN,SAAS,CAAC,CAAC;EAClF,IAAAZ,oBAAa,EAACN,OAAO,EAAE,MAAM,EAAEO,0BAAY,CAACC,MAAM,CAACiB,IAAI,CAAC,CAAC,CAAC;AAC5D","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"clear.js","names":["_errors","require","_hostComponentNames","_pointerEvents","_textInput","_eventBuilder","_type","_utils","clear","element","isHostTextInput","ErrorWithStack","type","isEditableTextInput","isPointerEventEnabled","dispatchEvent","EventBuilder","Common","focus","textToClear","getTextInputValue","selectionRange","start","end","length","TextInput","selectionChange","emptyText","emitTypingEvents","config","key","text","wait","endEditing","blur"],"sources":["../../src/user-event/clear.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport { ErrorWithStack } from '../helpers/errors';\nimport { isHostTextInput } from '../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../helpers/pointer-events';\nimport { getTextInputValue, isEditableTextInput } from '../helpers/text-input';\nimport { EventBuilder } from './event-builder';\nimport type { UserEventInstance } from './setup';\nimport { emitTypingEvents } from './type/type';\nimport { dispatchEvent, wait } from './utils';\n\nexport async function clear(this: UserEventInstance, element: ReactTestInstance): Promise<void> {\n  if (!isHostTextInput(element)) {\n    throw new ErrorWithStack(\n      `clear() only supports host \"TextInput\" elements. Passed element has type: \"${element.type}\".`,\n      clear,\n    );\n  }\n\n  if (!isEditableTextInput(element) || !isPointerEventEnabled(element)) {\n    return;\n  }\n\n  // 1. Enter element\n  await dispatchEvent(element, 'focus', EventBuilder.Common.focus());\n\n  // 2. Select all\n  const textToClear = getTextInputValue(element);\n  const selectionRange = {\n    start: 0,\n    end: textToClear.length,\n  };\n  await dispatchEvent(\n    element,\n    'selectionChange',\n    EventBuilder.TextInput.selectionChange(selectionRange),\n  );\n\n  // 3. Press backspace with selected text\n  const emptyText = '';\n  await emitTypingEvents(element, {\n    config: this.config,\n    key: 'Backspace',\n    text: emptyText,\n  });\n\n  // 4. Exit element\n  await wait(this.config);\n  await dispatchEvent(element, 'endEditing', EventBuilder.TextInput.endEditing(emptyText));\n  await dispatchEvent(element, 'blur', EventBuilder.Common.blur());\n}\n"],"mappings":";;;;;;AAEA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AAEA,IAAAK,KAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AAEO,eAAeO,KAAKA,CAA0BC,OAA0B,EAAiB;EAC9F,IAAI,CAAC,IAAAC,mCAAe,EAACD,OAAO,CAAC,EAAE;IAC7B,MAAM,IAAIE,sBAAc,CACtB,8EAA8EF,OAAO,CAACG,IAAI,IAAI,EAC9FJ,KACF,CAAC;EACH;EAEA,IAAI,CAAC,IAAAK,8BAAmB,EAACJ,OAAO,CAAC,IAAI,CAAC,IAAAK,oCAAqB,EAACL,OAAO,CAAC,EAAE;IACpE;EACF;;EAEA;EACA,MAAM,IAAAM,oBAAa,EAACN,OAAO,EAAE,OAAO,EAAEO,0BAAY,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;EAElE;EACA,MAAMC,WAAW,GAAG,IAAAC,4BAAiB,EAACX,OAAO,CAAC;EAC9C,MAAMY,cAAc,GAAG;IACrBC,KAAK,EAAE,CAAC;IACRC,GAAG,EAAEJ,WAAW,CAACK;EACnB,CAAC;EACD,MAAM,IAAAT,oBAAa,EACjBN,OAAO,EACP,iBAAiB,EACjBO,0BAAY,CAACS,SAAS,CAACC,eAAe,CAACL,cAAc,CACvD,CAAC;;EAED;EACA,MAAMM,SAAS,GAAG,EAAE;EACpB,MAAM,IAAAC,sBAAgB,EAACnB,OAAO,EAAE;IAC9BoB,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,GAAG,EAAE,WAAW;IAChBC,IAAI,EAAEJ;EACR,CAAC,CAAC;;EAEF;EACA,MAAM,IAAAK,WAAI,EAAC,IAAI,CAACH,MAAM,CAAC;EACvB,MAAM,IAAAd,oBAAa,EAACN,OAAO,EAAE,YAAY,EAAEO,0BAAY,CAACS,SAAS,CAACQ,UAAU,CAACN,SAAS,CAAC,CAAC;EACxF,MAAM,IAAAZ,oBAAa,EAACN,OAAO,EAAE,MAAM,EAAEO,0BAAY,CAACC,MAAM,CAACiB,IAAI,CAAC,CAAC,CAAC;AAClE","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/index.d.ts b/node_modules/@testing-library/react-native/build/user-event/index.d.ts
index 9a6e66d..c9d10ab 100644
--- a/node_modules/@testing-library/react-native/build/user-event/index.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/index.d.ts
@@ -1,9 +1,9 @@
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { PressOptions } from './press';
-import type { ScrollToOptions } from './scroll';
-import { setup } from './setup';
-import type { TypeOptions } from './type';
-export { UserEventConfig } from './setup';
+import type { PressOptions } from '@testing-library/react-native/build/user-event/press';
+import type { ScrollToOptions } from '@testing-library/react-native/build/user-event/scroll';
+import { setup } from '@testing-library/react-native/build/user-event/setup';
+import type { TypeOptions } from '@testing-library/react-native/build/user-event/type';
+export { UserEventConfig } from '@testing-library/react-native/build/user-event/setup';
 export declare const userEvent: {
     setup: typeof setup;
     press: (element: ReactTestInstance) => Promise<void>;
diff --git a/node_modules/@testing-library/react-native/build/user-event/paste.js b/node_modules/@testing-library/react-native/build/user-event/paste.js
index 4cc61de..6fd6479 100644
--- a/node_modules/@testing-library/react-native/build/user-event/paste.js
+++ b/node_modules/@testing-library/react-native/build/user-event/paste.js
@@ -20,7 +20,7 @@ async function paste(element, text) {
   }
 
   // 1. Enter element
-  (0, _utils.dispatchEvent)(element, 'focus', _eventBuilder.EventBuilder.Common.focus());
+  await (0, _utils.dispatchEvent)(element, 'focus', _eventBuilder.EventBuilder.Common.focus());
 
   // 2. Select all
   const textToClear = (0, _textInput.getTextInputValue)(element);
@@ -28,29 +28,29 @@ async function paste(element, text) {
     start: 0,
     end: textToClear.length
   };
-  (0, _utils.dispatchEvent)(element, 'selectionChange', _eventBuilder.EventBuilder.TextInput.selectionChange(rangeToClear));
+  await (0, _utils.dispatchEvent)(element, 'selectionChange', _eventBuilder.EventBuilder.TextInput.selectionChange(rangeToClear));
 
   // 3. Paste the text
   _nativeState.nativeState.valueForElement.set(element, text);
-  (0, _utils.dispatchEvent)(element, 'change', _eventBuilder.EventBuilder.TextInput.change(text));
-  (0, _utils.dispatchEvent)(element, 'changeText', text);
+  await (0, _utils.dispatchEvent)(element, 'change', _eventBuilder.EventBuilder.TextInput.change(text));
+  await (0, _utils.dispatchEvent)(element, 'changeText', text);
   const rangeAfter = {
     start: text.length,
     end: text.length
   };
-  (0, _utils.dispatchEvent)(element, 'selectionChange', _eventBuilder.EventBuilder.TextInput.selectionChange(rangeAfter));
+  await (0, _utils.dispatchEvent)(element, 'selectionChange', _eventBuilder.EventBuilder.TextInput.selectionChange(rangeAfter));
 
   // According to the docs only multiline TextInput emits contentSizeChange event
   // @see: https://reactnative.dev/docs/textinput#oncontentsizechange
   const isMultiline = element.props.multiline === true;
   if (isMultiline) {
     const contentSize = (0, _utils.getTextContentSize)(text);
-    (0, _utils.dispatchEvent)(element, 'contentSizeChange', _eventBuilder.EventBuilder.TextInput.contentSizeChange(contentSize));
+    await (0, _utils.dispatchEvent)(element, 'contentSizeChange', _eventBuilder.EventBuilder.TextInput.contentSizeChange(contentSize));
   }
 
   // 4. Exit element
   await (0, _utils.wait)(this.config);
-  (0, _utils.dispatchEvent)(element, 'endEditing', _eventBuilder.EventBuilder.TextInput.endEditing(text));
-  (0, _utils.dispatchEvent)(element, 'blur', _eventBuilder.EventBuilder.Common.blur());
+  await (0, _utils.dispatchEvent)(element, 'endEditing', _eventBuilder.EventBuilder.TextInput.endEditing(text));
+  await (0, _utils.dispatchEvent)(element, 'blur', _eventBuilder.EventBuilder.Common.blur());
 }
 //# sourceMappingURL=paste.js.map
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/paste.js.map b/node_modules/@testing-library/react-native/build/user-event/paste.js.map
index 1968d62..7f04515 100644
--- a/node_modules/@testing-library/react-native/build/user-event/paste.js.map
+++ b/node_modules/@testing-library/react-native/build/user-event/paste.js.map
@@ -1 +1 @@
-{"version":3,"file":"paste.js","names":["_errors","require","_hostComponentNames","_pointerEvents","_textInput","_nativeState","_eventBuilder","_utils","paste","element","text","isHostTextInput","ErrorWithStack","type","isEditableTextInput","isPointerEventEnabled","dispatchEvent","EventBuilder","Common","focus","textToClear","getTextInputValue","rangeToClear","start","end","length","TextInput","selectionChange","nativeState","valueForElement","set","change","rangeAfter","isMultiline","props","multiline","contentSize","getTextContentSize","contentSizeChange","wait","config","endEditing","blur"],"sources":["../../src/user-event/paste.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport { ErrorWithStack } from '../helpers/errors';\nimport { isHostTextInput } from '../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../helpers/pointer-events';\nimport { getTextInputValue, isEditableTextInput } from '../helpers/text-input';\nimport { nativeState } from '../native-state';\nimport { EventBuilder } from './event-builder';\nimport type { UserEventInstance } from './setup';\nimport { dispatchEvent, getTextContentSize, wait } from './utils';\n\nexport async function paste(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  text: string,\n): Promise<void> {\n  if (!isHostTextInput(element)) {\n    throw new ErrorWithStack(\n      `paste() only supports host \"TextInput\" elements. Passed element has type: \"${element.type}\".`,\n      paste,\n    );\n  }\n\n  if (!isEditableTextInput(element) || !isPointerEventEnabled(element)) {\n    return;\n  }\n\n  // 1. Enter element\n  dispatchEvent(element, 'focus', EventBuilder.Common.focus());\n\n  // 2. Select all\n  const textToClear = getTextInputValue(element);\n  const rangeToClear = { start: 0, end: textToClear.length };\n  dispatchEvent(element, 'selectionChange', EventBuilder.TextInput.selectionChange(rangeToClear));\n\n  // 3. Paste the text\n  nativeState.valueForElement.set(element, text);\n  dispatchEvent(element, 'change', EventBuilder.TextInput.change(text));\n  dispatchEvent(element, 'changeText', text);\n\n  const rangeAfter = { start: text.length, end: text.length };\n  dispatchEvent(element, 'selectionChange', EventBuilder.TextInput.selectionChange(rangeAfter));\n\n  // According to the docs only multiline TextInput emits contentSizeChange event\n  // @see: https://reactnative.dev/docs/textinput#oncontentsizechange\n  const isMultiline = element.props.multiline === true;\n  if (isMultiline) {\n    const contentSize = getTextContentSize(text);\n    dispatchEvent(\n      element,\n      'contentSizeChange',\n      EventBuilder.TextInput.contentSizeChange(contentSize),\n    );\n  }\n\n  // 4. Exit element\n  await wait(this.config);\n  dispatchEvent(element, 'endEditing', EventBuilder.TextInput.endEditing(text));\n  dispatchEvent(element, 'blur', EventBuilder.Common.blur());\n}\n"],"mappings":";;;;;;AAEA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AAEA,IAAAM,MAAA,GAAAN,OAAA;AAEO,eAAeO,KAAKA,CAEzBC,OAA0B,EAC1BC,IAAY,EACG;EACf,IAAI,CAAC,IAAAC,mCAAe,EAACF,OAAO,CAAC,EAAE;IAC7B,MAAM,IAAIG,sBAAc,CACtB,8EAA8EH,OAAO,CAACI,IAAI,IAAI,EAC9FL,KACF,CAAC;EACH;EAEA,IAAI,CAAC,IAAAM,8BAAmB,EAACL,OAAO,CAAC,IAAI,CAAC,IAAAM,oCAAqB,EAACN,OAAO,CAAC,EAAE;IACpE;EACF;;EAEA;EACA,IAAAO,oBAAa,EAACP,OAAO,EAAE,OAAO,EAAEQ,0BAAY,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMC,WAAW,GAAG,IAAAC,4BAAiB,EAACZ,OAAO,CAAC;EAC9C,MAAMa,YAAY,GAAG;IAAEC,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAEJ,WAAW,CAACK;EAAO,CAAC;EAC1D,IAAAT,oBAAa,EAACP,OAAO,EAAE,iBAAiB,EAAEQ,0BAAY,CAACS,SAAS,CAACC,eAAe,CAACL,YAAY,CAAC,CAAC;;EAE/F;EACAM,wBAAW,CAACC,eAAe,CAACC,GAAG,CAACrB,OAAO,EAAEC,IAAI,CAAC;EAC9C,IAAAM,oBAAa,EAACP,OAAO,EAAE,QAAQ,EAAEQ,0BAAY,CAACS,SAAS,CAACK,MAAM,CAACrB,IAAI,CAAC,CAAC;EACrE,IAAAM,oBAAa,EAACP,OAAO,EAAE,YAAY,EAAEC,IAAI,CAAC;EAE1C,MAAMsB,UAAU,GAAG;IAAET,KAAK,EAAEb,IAAI,CAACe,MAAM;IAAED,GAAG,EAAEd,IAAI,CAACe;EAAO,CAAC;EAC3D,IAAAT,oBAAa,EAACP,OAAO,EAAE,iBAAiB,EAAEQ,0BAAY,CAACS,SAAS,CAACC,eAAe,CAACK,UAAU,CAAC,CAAC;;EAE7F;EACA;EACA,MAAMC,WAAW,GAAGxB,OAAO,CAACyB,KAAK,CAACC,SAAS,KAAK,IAAI;EACpD,IAAIF,WAAW,EAAE;IACf,MAAMG,WAAW,GAAG,IAAAC,yBAAkB,EAAC3B,IAAI,CAAC;IAC5C,IAAAM,oBAAa,EACXP,OAAO,EACP,mBAAmB,EACnBQ,0BAAY,CAACS,SAAS,CAACY,iBAAiB,CAACF,WAAW,CACtD,CAAC;EACH;;EAEA;EACA,MAAM,IAAAG,WAAI,EAAC,IAAI,CAACC,MAAM,CAAC;EACvB,IAAAxB,oBAAa,EAACP,OAAO,EAAE,YAAY,EAAEQ,0BAAY,CAACS,SAAS,CAACe,UAAU,CAAC/B,IAAI,CAAC,CAAC;EAC7E,IAAAM,oBAAa,EAACP,OAAO,EAAE,MAAM,EAAEQ,0BAAY,CAACC,MAAM,CAACwB,IAAI,CAAC,CAAC,CAAC;AAC5D","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"paste.js","names":["_errors","require","_hostComponentNames","_pointerEvents","_textInput","_nativeState","_eventBuilder","_utils","paste","element","text","isHostTextInput","ErrorWithStack","type","isEditableTextInput","isPointerEventEnabled","dispatchEvent","EventBuilder","Common","focus","textToClear","getTextInputValue","rangeToClear","start","end","length","TextInput","selectionChange","nativeState","valueForElement","set","change","rangeAfter","isMultiline","props","multiline","contentSize","getTextContentSize","contentSizeChange","wait","config","endEditing","blur"],"sources":["../../src/user-event/paste.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport { ErrorWithStack } from '../helpers/errors';\nimport { isHostTextInput } from '../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../helpers/pointer-events';\nimport { getTextInputValue, isEditableTextInput } from '../helpers/text-input';\nimport { nativeState } from '../native-state';\nimport { EventBuilder } from './event-builder';\nimport type { UserEventInstance } from './setup';\nimport { dispatchEvent, getTextContentSize, wait } from './utils';\n\nexport async function paste(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  text: string,\n): Promise<void> {\n  if (!isHostTextInput(element)) {\n    throw new ErrorWithStack(\n      `paste() only supports host \"TextInput\" elements. Passed element has type: \"${element.type}\".`,\n      paste,\n    );\n  }\n\n  if (!isEditableTextInput(element) || !isPointerEventEnabled(element)) {\n    return;\n  }\n\n  // 1. Enter element\n  await dispatchEvent(element, 'focus', EventBuilder.Common.focus());\n\n  // 2. Select all\n  const textToClear = getTextInputValue(element);\n  const rangeToClear = { start: 0, end: textToClear.length };\n  await dispatchEvent(\n    element,\n    'selectionChange',\n    EventBuilder.TextInput.selectionChange(rangeToClear),\n  );\n\n  // 3. Paste the text\n  nativeState.valueForElement.set(element, text);\n  await dispatchEvent(element, 'change', EventBuilder.TextInput.change(text));\n  await dispatchEvent(element, 'changeText', text);\n\n  const rangeAfter = { start: text.length, end: text.length };\n  await dispatchEvent(\n    element,\n    'selectionChange',\n    EventBuilder.TextInput.selectionChange(rangeAfter),\n  );\n\n  // According to the docs only multiline TextInput emits contentSizeChange event\n  // @see: https://reactnative.dev/docs/textinput#oncontentsizechange\n  const isMultiline = element.props.multiline === true;\n  if (isMultiline) {\n    const contentSize = getTextContentSize(text);\n    await dispatchEvent(\n      element,\n      'contentSizeChange',\n      EventBuilder.TextInput.contentSizeChange(contentSize),\n    );\n  }\n\n  // 4. Exit element\n  await wait(this.config);\n  await dispatchEvent(element, 'endEditing', EventBuilder.TextInput.endEditing(text));\n  await dispatchEvent(element, 'blur', EventBuilder.Common.blur());\n}\n"],"mappings":";;;;;;AAEA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AAEA,IAAAM,MAAA,GAAAN,OAAA;AAEO,eAAeO,KAAKA,CAEzBC,OAA0B,EAC1BC,IAAY,EACG;EACf,IAAI,CAAC,IAAAC,mCAAe,EAACF,OAAO,CAAC,EAAE;IAC7B,MAAM,IAAIG,sBAAc,CACtB,8EAA8EH,OAAO,CAACI,IAAI,IAAI,EAC9FL,KACF,CAAC;EACH;EAEA,IAAI,CAAC,IAAAM,8BAAmB,EAACL,OAAO,CAAC,IAAI,CAAC,IAAAM,oCAAqB,EAACN,OAAO,CAAC,EAAE;IACpE;EACF;;EAEA;EACA,MAAM,IAAAO,oBAAa,EAACP,OAAO,EAAE,OAAO,EAAEQ,0BAAY,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;EAElE;EACA,MAAMC,WAAW,GAAG,IAAAC,4BAAiB,EAACZ,OAAO,CAAC;EAC9C,MAAMa,YAAY,GAAG;IAAEC,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAEJ,WAAW,CAACK;EAAO,CAAC;EAC1D,MAAM,IAAAT,oBAAa,EACjBP,OAAO,EACP,iBAAiB,EACjBQ,0BAAY,CAACS,SAAS,CAACC,eAAe,CAACL,YAAY,CACrD,CAAC;;EAED;EACAM,wBAAW,CAACC,eAAe,CAACC,GAAG,CAACrB,OAAO,EAAEC,IAAI,CAAC;EAC9C,MAAM,IAAAM,oBAAa,EAACP,OAAO,EAAE,QAAQ,EAAEQ,0BAAY,CAACS,SAAS,CAACK,MAAM,CAACrB,IAAI,CAAC,CAAC;EAC3E,MAAM,IAAAM,oBAAa,EAACP,OAAO,EAAE,YAAY,EAAEC,IAAI,CAAC;EAEhD,MAAMsB,UAAU,GAAG;IAAET,KAAK,EAAEb,IAAI,CAACe,MAAM;IAAED,GAAG,EAAEd,IAAI,CAACe;EAAO,CAAC;EAC3D,MAAM,IAAAT,oBAAa,EACjBP,OAAO,EACP,iBAAiB,EACjBQ,0BAAY,CAACS,SAAS,CAACC,eAAe,CAACK,UAAU,CACnD,CAAC;;EAED;EACA;EACA,MAAMC,WAAW,GAAGxB,OAAO,CAACyB,KAAK,CAACC,SAAS,KAAK,IAAI;EACpD,IAAIF,WAAW,EAAE;IACf,MAAMG,WAAW,GAAG,IAAAC,yBAAkB,EAAC3B,IAAI,CAAC;IAC5C,MAAM,IAAAM,oBAAa,EACjBP,OAAO,EACP,mBAAmB,EACnBQ,0BAAY,CAACS,SAAS,CAACY,iBAAiB,CAACF,WAAW,CACtD,CAAC;EACH;;EAEA;EACA,MAAM,IAAAG,WAAI,EAAC,IAAI,CAACC,MAAM,CAAC;EACvB,MAAM,IAAAxB,oBAAa,EAACP,OAAO,EAAE,YAAY,EAAEQ,0BAAY,CAACS,SAAS,CAACe,UAAU,CAAC/B,IAAI,CAAC,CAAC;EACnF,MAAM,IAAAM,oBAAa,EAACP,OAAO,EAAE,MAAM,EAAEQ,0BAAY,CAACC,MAAM,CAACwB,IAAI,CAAC,CAAC,CAAC;AAClE","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/press/index.d.ts b/node_modules/@testing-library/react-native/build/user-event/press/index.d.ts
index d5cda02..91a07b2 100644
--- a/node_modules/@testing-library/react-native/build/user-event/press/index.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/press/index.d.ts
@@ -1 +1 @@
-export { longPress, press, PressOptions } from './press';
+export { longPress, press, PressOptions } from '@testing-library/react-native/build/user-event/press/press';
diff --git a/node_modules/@testing-library/react-native/build/user-event/press/press.d.ts b/node_modules/@testing-library/react-native/build/user-event/press/press.d.ts
index 3bd8c0d..efb522c 100644
--- a/node_modules/@testing-library/react-native/build/user-event/press/press.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/press/press.d.ts
@@ -1,5 +1,5 @@
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { UserEventInstance } from '../setup';
+import type { UserEventInstance } from '@testing-library/react-native/build/user-event/setup';
 export declare const DEFAULT_MIN_PRESS_DURATION = 130;
 export declare const DEFAULT_LONG_PRESS_DELAY_MS = 500;
 export interface PressOptions {
diff --git a/node_modules/@testing-library/react-native/build/user-event/press/press.js b/node_modules/@testing-library/react-native/build/user-event/press/press.js
index 7743908..5c1fd91 100644
--- a/node_modules/@testing-library/react-native/build/user-event/press/press.js
+++ b/node_modules/@testing-library/react-native/build/user-event/press/press.js
@@ -76,35 +76,35 @@ function hasPressEventHandler(element) {
  */
 async function emitDirectPressEvents(config, element, options) {
   await (0, _utils.wait)(config);
-  (0, _utils.dispatchEvent)(element, 'pressIn', _eventBuilder.EventBuilder.Common.touch());
+  await (0, _utils.dispatchEvent)(element, 'pressIn', _eventBuilder.EventBuilder.Common.touch());
   await (0, _utils.wait)(config, options.duration);
 
   // Long press events are emitted before `pressOut`.
   if (options.type === 'longPress') {
-    (0, _utils.dispatchEvent)(element, 'longPress', _eventBuilder.EventBuilder.Common.touch());
+    await (0, _utils.dispatchEvent)(element, 'longPress', _eventBuilder.EventBuilder.Common.touch());
   }
-  (0, _utils.dispatchEvent)(element, 'pressOut', _eventBuilder.EventBuilder.Common.touch());
+  await (0, _utils.dispatchEvent)(element, 'pressOut', _eventBuilder.EventBuilder.Common.touch());
 
   // Regular press events are emitted after `pressOut` according to the React Native docs.
   // See: https://reactnative.dev/docs/pressable#onpress
   // Experimentally for very short presses (< 130ms) `press` events are actually emitted before `onPressOut`, but
   // we will ignore that as in reality most pressed would be above the 130ms threshold.
   if (options.type === 'press') {
-    (0, _utils.dispatchEvent)(element, 'press', _eventBuilder.EventBuilder.Common.touch());
+    await (0, _utils.dispatchEvent)(element, 'press', _eventBuilder.EventBuilder.Common.touch());
   }
 }
 async function emitPressabilityPressEvents(config, element, options) {
   await (0, _utils.wait)(config);
-  (0, _utils.dispatchEvent)(element, 'responderGrant', _eventBuilder.EventBuilder.Common.responderGrant());
+  await (0, _utils.dispatchEvent)(element, 'responderGrant', _eventBuilder.EventBuilder.Common.responderGrant());
   const duration = options.duration ?? DEFAULT_MIN_PRESS_DURATION;
   await (0, _utils.wait)(config, duration);
-  (0, _utils.dispatchEvent)(element, 'responderRelease', _eventBuilder.EventBuilder.Common.responderRelease());
+  await (0, _utils.dispatchEvent)(element, 'responderRelease', _eventBuilder.EventBuilder.Common.responderRelease());
 
   // React Native will wait for minimal delay of DEFAULT_MIN_PRESS_DURATION
   // before emitting the `pressOut` event. We need to wait here, so that
   // `press()` function does not return before that.
   if (DEFAULT_MIN_PRESS_DURATION - duration > 0) {
-    await (0, _act.default)(() => (0, _utils.wait)(config, DEFAULT_MIN_PRESS_DURATION - duration));
+    await (0, _act.default)(async () => (0, _utils.wait)(config, DEFAULT_MIN_PRESS_DURATION - duration));
   }
 }
 //# sourceMappingURL=press.js.map
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/press/press.js.map b/node_modules/@testing-library/react-native/build/user-event/press/press.js.map
index 29ed189..38ef7da 100644
--- a/node_modules/@testing-library/react-native/build/user-event/press/press.js.map
+++ b/node_modules/@testing-library/react-native/build/user-event/press/press.js.map
@@ -1 +1 @@
-{"version":3,"file":"press.js","names":["_act","_interopRequireDefault","require","_eventHandler","_componentTree","_errors","_hostComponentNames","_pointerEvents","_eventBuilder","_utils","e","__esModule","default","DEFAULT_MIN_PRESS_DURATION","exports","DEFAULT_LONG_PRESS_DELAY_MS","press","element","isHostElement","ErrorWithStack","type","basePress","config","longPress","options","duration","isEnabledHostElement","hasPressEventHandler","emitDirectPressEvents","isEnabledTouchResponder","emitPressabilityPressEvents","hostParentElement","getHostParent","isPointerEventEnabled","isHostText","props","disabled","isHostTextInput","editable","onStartShouldSetResponder","getEventHandler","wait","dispatchEvent","EventBuilder","Common","touch","responderGrant","responderRelease","act"],"sources":["../../../src/user-event/press/press.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport act from '../../act';\nimport { getEventHandler } from '../../event-handler';\nimport type { HostTestInstance } from '../../helpers/component-tree';\nimport { getHostParent, isHostElement } from '../../helpers/component-tree';\nimport { ErrorWithStack } from '../../helpers/errors';\nimport { isHostText, isHostTextInput } from '../../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../../helpers/pointer-events';\nimport { EventBuilder } from '../event-builder';\nimport type { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, wait } from '../utils';\n\n// These are constants defined in the React Native repo\n// See: https://github.com/facebook/react-native/blob/50e38cc9f1e6713228a91ad50f426c4f65e65e1a/packages/react-native/Libraries/Pressability/Pressability.js#L264\nexport const DEFAULT_MIN_PRESS_DURATION = 130;\nexport const DEFAULT_LONG_PRESS_DELAY_MS = 500;\n\nexport interface PressOptions {\n  duration?: number;\n}\n\nexport async function press(this: UserEventInstance, element: ReactTestInstance): Promise<void> {\n  if (!isHostElement(element)) {\n    throw new ErrorWithStack(\n      `press() works only with host elements. Passed element has type \"${element.type}\".`,\n      press,\n    );\n  }\n\n  await basePress(this.config, element, {\n    type: 'press',\n  });\n}\n\nexport async function longPress(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  options?: PressOptions,\n): Promise<void> {\n  if (!isHostElement(element)) {\n    throw new ErrorWithStack(\n      `longPress() works only with host elements. Passed element has type \"${element.type}\".`,\n      longPress,\n    );\n  }\n\n  await basePress(this.config, element, {\n    type: 'longPress',\n    duration: options?.duration ?? DEFAULT_LONG_PRESS_DELAY_MS,\n  });\n}\n\ninterface BasePressOptions {\n  type: 'press' | 'longPress';\n  duration?: number;\n}\n\nconst basePress = async (\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n): Promise<void> => {\n  if (isEnabledHostElement(element) && hasPressEventHandler(element)) {\n    await emitDirectPressEvents(config, element, options);\n    return;\n  }\n\n  if (isEnabledTouchResponder(element)) {\n    await emitPressabilityPressEvents(config, element, options);\n    return;\n  }\n\n  const hostParentElement = getHostParent(element);\n  if (!hostParentElement) {\n    return;\n  }\n\n  await basePress(config, hostParentElement, options);\n};\n\nfunction isEnabledHostElement(element: HostTestInstance) {\n  if (!isPointerEventEnabled(element)) {\n    return false;\n  }\n\n  if (isHostText(element)) {\n    return element.props.disabled !== true;\n  }\n\n  if (isHostTextInput(element)) {\n    // @ts-expect-error - workaround incorrect ReactTestInstance type\n    return element.props.editable !== false;\n  }\n\n  return true;\n}\n\nfunction isEnabledTouchResponder(element: HostTestInstance) {\n  return isPointerEventEnabled(element) && element.props.onStartShouldSetResponder?.();\n}\n\nfunction hasPressEventHandler(element: HostTestInstance) {\n  return (\n    getEventHandler(element, 'press') ||\n    getEventHandler(element, 'longPress') ||\n    getEventHandler(element, 'pressIn') ||\n    getEventHandler(element, 'pressOut')\n  );\n}\n\n/**\n * Dispatches a press event sequence for host elements that have `onPress*` event handlers.\n */\nasync function emitDirectPressEvents(\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n  dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n\n  await wait(config, options.duration);\n\n  // Long press events are emitted before `pressOut`.\n  if (options.type === 'longPress') {\n    dispatchEvent(element, 'longPress', EventBuilder.Common.touch());\n  }\n\n  dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n\n  // Regular press events are emitted after `pressOut` according to the React Native docs.\n  // See: https://reactnative.dev/docs/pressable#onpress\n  // Experimentally for very short presses (< 130ms) `press` events are actually emitted before `onPressOut`, but\n  // we will ignore that as in reality most pressed would be above the 130ms threshold.\n  if (options.type === 'press') {\n    dispatchEvent(element, 'press', EventBuilder.Common.touch());\n  }\n}\n\nasync function emitPressabilityPressEvents(\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n\n  dispatchEvent(element, 'responderGrant', EventBuilder.Common.responderGrant());\n\n  const duration = options.duration ?? DEFAULT_MIN_PRESS_DURATION;\n  await wait(config, duration);\n\n  dispatchEvent(element, 'responderRelease', EventBuilder.Common.responderRelease());\n\n  // React Native will wait for minimal delay of DEFAULT_MIN_PRESS_DURATION\n  // before emitting the `pressOut` event. We need to wait here, so that\n  // `press()` function does not return before that.\n  if (DEFAULT_MIN_PRESS_DURATION - duration > 0) {\n    await act(() => wait(config, DEFAULT_MIN_PRESS_DURATION - duration));\n  }\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"press.js","names":["_act","_interopRequireDefault","require","_eventHandler","_componentTree","_errors","_hostComponentNames","_pointerEvents","_eventBuilder","_utils","e","__esModule","default","DEFAULT_MIN_PRESS_DURATION","exports","DEFAULT_LONG_PRESS_DELAY_MS","press","element","isHostElement","ErrorWithStack","type","basePress","config","longPress","options","duration","isEnabledHostElement","hasPressEventHandler","emitDirectPressEvents","isEnabledTouchResponder","emitPressabilityPressEvents","hostParentElement","getHostParent","isPointerEventEnabled","isHostText","props","disabled","isHostTextInput","editable","onStartShouldSetResponder","getEventHandler","wait","dispatchEvent","EventBuilder","Common","touch","responderGrant","responderRelease","act"],"sources":["../../../src/user-event/press/press.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport act from '../../act';\nimport { getEventHandler } from '../../event-handler';\nimport type { HostTestInstance } from '../../helpers/component-tree';\nimport { getHostParent, isHostElement } from '../../helpers/component-tree';\nimport { ErrorWithStack } from '../../helpers/errors';\nimport { isHostText, isHostTextInput } from '../../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../../helpers/pointer-events';\nimport { EventBuilder } from '../event-builder';\nimport type { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, wait } from '../utils';\n\n// These are constants defined in the React Native repo\n// See: https://github.com/facebook/react-native/blob/50e38cc9f1e6713228a91ad50f426c4f65e65e1a/packages/react-native/Libraries/Pressability/Pressability.js#L264\nexport const DEFAULT_MIN_PRESS_DURATION = 130;\nexport const DEFAULT_LONG_PRESS_DELAY_MS = 500;\n\nexport interface PressOptions {\n  duration?: number;\n}\n\nexport async function press(this: UserEventInstance, element: ReactTestInstance): Promise<void> {\n  if (!isHostElement(element)) {\n    throw new ErrorWithStack(\n      `press() works only with host elements. Passed element has type \"${element.type}\".`,\n      press,\n    );\n  }\n\n  await basePress(this.config, element, {\n    type: 'press',\n  });\n}\n\nexport async function longPress(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  options?: PressOptions,\n): Promise<void> {\n  if (!isHostElement(element)) {\n    throw new ErrorWithStack(\n      `longPress() works only with host elements. Passed element has type \"${element.type}\".`,\n      longPress,\n    );\n  }\n\n  await basePress(this.config, element, {\n    type: 'longPress',\n    duration: options?.duration ?? DEFAULT_LONG_PRESS_DELAY_MS,\n  });\n}\n\ninterface BasePressOptions {\n  type: 'press' | 'longPress';\n  duration?: number;\n}\n\nconst basePress = async (\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n): Promise<void> => {\n  if (isEnabledHostElement(element) && hasPressEventHandler(element)) {\n    await emitDirectPressEvents(config, element, options);\n    return;\n  }\n\n  if (isEnabledTouchResponder(element)) {\n    await emitPressabilityPressEvents(config, element, options);\n    return;\n  }\n\n  const hostParentElement = getHostParent(element);\n  if (!hostParentElement) {\n    return;\n  }\n\n  await basePress(config, hostParentElement, options);\n};\n\nfunction isEnabledHostElement(element: HostTestInstance) {\n  if (!isPointerEventEnabled(element)) {\n    return false;\n  }\n\n  if (isHostText(element)) {\n    return element.props.disabled !== true;\n  }\n\n  if (isHostTextInput(element)) {\n    // @ts-expect-error - workaround incorrect ReactTestInstance type\n    return element.props.editable !== false;\n  }\n\n  return true;\n}\n\nfunction isEnabledTouchResponder(element: HostTestInstance) {\n  return isPointerEventEnabled(element) && element.props.onStartShouldSetResponder?.();\n}\n\nfunction hasPressEventHandler(element: HostTestInstance) {\n  return (\n    getEventHandler(element, 'press') ||\n    getEventHandler(element, 'longPress') ||\n    getEventHandler(element, 'pressIn') ||\n    getEventHandler(element, 'pressOut')\n  );\n}\n\n/**\n * Dispatches a press event sequence for host elements that have `onPress*` event handlers.\n */\nasync function emitDirectPressEvents(\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n  await dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n\n  await wait(config, options.duration);\n\n  // Long press events are emitted before `pressOut`.\n  if (options.type === 'longPress') {\n    await dispatchEvent(element, 'longPress', EventBuilder.Common.touch());\n  }\n\n  await dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n\n  // Regular press events are emitted after `pressOut` according to the React Native docs.\n  // See: https://reactnative.dev/docs/pressable#onpress\n  // Experimentally for very short presses (< 130ms) `press` events are actually emitted before `onPressOut`, but\n  // we will ignore that as in reality most pressed would be above the 130ms threshold.\n  if (options.type === 'press') {\n    await dispatchEvent(element, 'press', EventBuilder.Common.touch());\n  }\n}\n\nasync function emitPressabilityPressEvents(\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n\n  await dispatchEvent(element, 'responderGrant', EventBuilder.Common.responderGrant());\n\n  const duration = options.duration ?? DEFAULT_MIN_PRESS_DURATION;\n  await wait(config, duration);\n\n  await dispatchEvent(element, 'responderRelease', EventBuilder.Common.responderRelease());\n\n  // React Native will wait for minimal delay of DEFAULT_MIN_PRESS_DURATION\n  // before emitting the `pressOut` event. We need to wait here, so that\n  // `press()` function does not return before that.\n  if (DEFAULT_MIN_PRESS_DURATION - duration > 0) {\n    await act(async () => wait(config, DEFAULT_MIN_PRESS_DURATION - duration));\n  }\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/scroll/index.d.ts b/node_modules/@testing-library/react-native/build/user-event/scroll/index.d.ts
index 2eb6ff1..72b9148 100644
--- a/node_modules/@testing-library/react-native/build/user-event/scroll/index.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/scroll/index.d.ts
@@ -1 +1 @@
-export { scrollTo, ScrollToOptions } from './scroll-to';
+export { scrollTo, ScrollToOptions } from '@testing-library/react-native/build/user-event/scroll/scroll-to';
diff --git a/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.d.ts b/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.d.ts
index f8e79ef..6500f2f 100644
--- a/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.d.ts
@@ -1,6 +1,6 @@
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { Size } from '../../types';
-import type { UserEventInstance } from '../setup';
+import type { Size } from '@testing-library/react-native/build/types';
+import type { UserEventInstance } from '@testing-library/react-native/build/user-event/setup';
 interface CommonScrollToOptions {
     contentSize?: Size;
     layoutMeasurement?: Size;
diff --git a/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.js b/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.js
index 6d537f3..36ff55b 100644
--- a/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.js
+++ b/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.js
@@ -17,7 +17,7 @@ async function scrollTo(element, options) {
     throw new _errors.ErrorWithStack(`scrollTo() works only with host "ScrollView" elements. Passed element has type "${element.type}".`, scrollTo);
   }
   ensureScrollViewDirection(element, options);
-  (0, _utils.dispatchEvent)(element, 'contentSizeChange', options.contentSize?.width ?? 0, options.contentSize?.height ?? 0);
+  await (0, _utils.dispatchEvent)(element, 'contentSizeChange', options.contentSize?.width ?? 0, options.contentSize?.height ?? 0);
   const initialOffset = _nativeState.nativeState.contentOffsetForElement.get(element) ?? {
     x: 0,
     y: 0
@@ -41,36 +41,36 @@ async function emitDragScrollEvents(config, element, scrollSteps, scrollOptions)
     return;
   }
   await (0, _utils.wait)(config);
-  (0, _utils.dispatchEvent)(element, 'scrollBeginDrag', _eventBuilder.EventBuilder.ScrollView.scroll(scrollSteps[0], scrollOptions));
+  await (0, _utils.dispatchEvent)(element, 'scrollBeginDrag', _eventBuilder.EventBuilder.ScrollView.scroll(scrollSteps[0], scrollOptions));
 
   // Note: experimentally, in case of drag scroll the last scroll step
   // will not trigger `scroll` event.
   // See: https://github.com/callstack/react-native-testing-library/wiki/ScrollView-Events
   for (let i = 1; i < scrollSteps.length - 1; i += 1) {
     await (0, _utils.wait)(config);
-    (0, _utils.dispatchEvent)(element, 'scroll', _eventBuilder.EventBuilder.ScrollView.scroll(scrollSteps[i], scrollOptions));
+    await (0, _utils.dispatchEvent)(element, 'scroll', _eventBuilder.EventBuilder.ScrollView.scroll(scrollSteps[i], scrollOptions));
   }
   await (0, _utils.wait)(config);
   const lastStep = scrollSteps.at(-1);
-  (0, _utils.dispatchEvent)(element, 'scrollEndDrag', _eventBuilder.EventBuilder.ScrollView.scroll(lastStep, scrollOptions));
+  await (0, _utils.dispatchEvent)(element, 'scrollEndDrag', _eventBuilder.EventBuilder.ScrollView.scroll(lastStep, scrollOptions));
 }
 async function emitMomentumScrollEvents(config, element, scrollSteps, scrollOptions) {
   if (scrollSteps.length === 0) {
     return;
   }
   await (0, _utils.wait)(config);
-  (0, _utils.dispatchEvent)(element, 'momentumScrollBegin', _eventBuilder.EventBuilder.ScrollView.scroll(scrollSteps[0], scrollOptions));
+  await (0, _utils.dispatchEvent)(element, 'momentumScrollBegin', _eventBuilder.EventBuilder.ScrollView.scroll(scrollSteps[0], scrollOptions));
 
   // Note: experimentally, in case of momentum scroll the last scroll step
   // will trigger `scroll` event.
   // See: https://github.com/callstack/react-native-testing-library/wiki/ScrollView-Events
   for (let i = 1; i < scrollSteps.length; i += 1) {
     await (0, _utils.wait)(config);
-    (0, _utils.dispatchEvent)(element, 'scroll', _eventBuilder.EventBuilder.ScrollView.scroll(scrollSteps[i], scrollOptions));
+    await (0, _utils.dispatchEvent)(element, 'scroll', _eventBuilder.EventBuilder.ScrollView.scroll(scrollSteps[i], scrollOptions));
   }
   await (0, _utils.wait)(config);
   const lastStep = scrollSteps.at(-1);
-  (0, _utils.dispatchEvent)(element, 'momentumScrollEnd', _eventBuilder.EventBuilder.ScrollView.scroll(lastStep, scrollOptions));
+  await (0, _utils.dispatchEvent)(element, 'momentumScrollEnd', _eventBuilder.EventBuilder.ScrollView.scroll(lastStep, scrollOptions));
 }
 function ensureScrollViewDirection(element, options) {
   const isVerticalScrollView = element.props.horizontal !== true;
diff --git a/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.js.map b/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.js.map
index 8cb06f3..ee20e75 100644
--- a/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.js.map
+++ b/node_modules/@testing-library/react-native/build/user-event/scroll/scroll-to.js.map
@@ -1 +1 @@
-{"version":3,"file":"scroll-to.js","names":["_jestMatcherUtils","require","_errors","_hostComponentNames","_object","_nativeState","_eventBuilder","_utils","_utils2","scrollTo","element","options","isHostScrollView","ErrorWithStack","type","ensureScrollViewDirection","dispatchEvent","contentSize","width","height","initialOffset","nativeState","contentOffsetForElement","get","x","y","dragSteps","createScrollSteps","linearInterpolator","emitDragScrollEvents","config","momentumStart","at","momentumSteps","momentumY","momentumX","inertialInterpolator","emitMomentumScrollEvents","finalOffset","set","scrollSteps","scrollOptions","length","wait","EventBuilder","ScrollView","scroll","i","lastStep","isVerticalScrollView","props","horizontal","hasHorizontalScrollOptions","undefined","stringify","pick","hasVerticalScrollOptions"],"sources":["../../../src/user-event/scroll/scroll-to.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { stringify } from 'jest-matcher-utils';\n\nimport { ErrorWithStack } from '../../helpers/errors';\nimport { isHostScrollView } from '../../helpers/host-component-names';\nimport { pick } from '../../helpers/object';\nimport { nativeState } from '../../native-state';\nimport type { Point, Size } from '../../types';\nimport { EventBuilder } from '../event-builder';\nimport type { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, wait } from '../utils';\nimport { createScrollSteps, inertialInterpolator, linearInterpolator } from './utils';\n\ninterface CommonScrollToOptions {\n  contentSize?: Size;\n  layoutMeasurement?: Size;\n}\n\nexport interface VerticalScrollToOptions extends CommonScrollToOptions {\n  y: number;\n  momentumY?: number;\n\n  // Vertical scroll should not contain horizontal scroll part.\n  x?: never;\n  momentumX?: never;\n}\n\nexport interface HorizontalScrollToOptions extends CommonScrollToOptions {\n  x: number;\n  momentumX?: number;\n\n  // Horizontal scroll should not contain vertical scroll part.\n  y?: never;\n  momentumY?: never;\n}\n\nexport type ScrollToOptions = VerticalScrollToOptions | HorizontalScrollToOptions;\n\nexport async function scrollTo(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  options: ScrollToOptions,\n): Promise<void> {\n  if (!isHostScrollView(element)) {\n    throw new ErrorWithStack(\n      `scrollTo() works only with host \"ScrollView\" elements. Passed element has type \"${element.type}\".`,\n      scrollTo,\n    );\n  }\n\n  ensureScrollViewDirection(element, options);\n\n  dispatchEvent(\n    element,\n    'contentSizeChange',\n    options.contentSize?.width ?? 0,\n    options.contentSize?.height ?? 0,\n  );\n\n  const initialOffset = nativeState.contentOffsetForElement.get(element) ?? { x: 0, y: 0 };\n  const dragSteps = createScrollSteps(\n    { y: options.y, x: options.x },\n    initialOffset,\n    linearInterpolator,\n  );\n  await emitDragScrollEvents(this.config, element, dragSteps, options);\n\n  const momentumStart = dragSteps.at(-1) ?? initialOffset;\n  const momentumSteps = createScrollSteps(\n    { y: options.momentumY, x: options.momentumX },\n    momentumStart,\n    inertialInterpolator,\n  );\n  await emitMomentumScrollEvents(this.config, element, momentumSteps, options);\n\n  const finalOffset = momentumSteps.at(-1) ?? dragSteps.at(-1) ?? initialOffset;\n  nativeState.contentOffsetForElement.set(element, finalOffset);\n}\n\nasync function emitDragScrollEvents(\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  scrollSteps: Point[],\n  scrollOptions: ScrollToOptions,\n) {\n  if (scrollSteps.length === 0) {\n    return;\n  }\n\n  await wait(config);\n  dispatchEvent(\n    element,\n    'scrollBeginDrag',\n    EventBuilder.ScrollView.scroll(scrollSteps[0], scrollOptions),\n  );\n\n  // Note: experimentally, in case of drag scroll the last scroll step\n  // will not trigger `scroll` event.\n  // See: https://github.com/callstack/react-native-testing-library/wiki/ScrollView-Events\n  for (let i = 1; i < scrollSteps.length - 1; i += 1) {\n    await wait(config);\n    dispatchEvent(element, 'scroll', EventBuilder.ScrollView.scroll(scrollSteps[i], scrollOptions));\n  }\n\n  await wait(config);\n  const lastStep = scrollSteps.at(-1);\n  dispatchEvent(element, 'scrollEndDrag', EventBuilder.ScrollView.scroll(lastStep, scrollOptions));\n}\n\nasync function emitMomentumScrollEvents(\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  scrollSteps: Point[],\n  scrollOptions: ScrollToOptions,\n) {\n  if (scrollSteps.length === 0) {\n    return;\n  }\n\n  await wait(config);\n  dispatchEvent(\n    element,\n    'momentumScrollBegin',\n    EventBuilder.ScrollView.scroll(scrollSteps[0], scrollOptions),\n  );\n\n  // Note: experimentally, in case of momentum scroll the last scroll step\n  // will trigger `scroll` event.\n  // See: https://github.com/callstack/react-native-testing-library/wiki/ScrollView-Events\n  for (let i = 1; i < scrollSteps.length; i += 1) {\n    await wait(config);\n    dispatchEvent(element, 'scroll', EventBuilder.ScrollView.scroll(scrollSteps[i], scrollOptions));\n  }\n\n  await wait(config);\n  const lastStep = scrollSteps.at(-1);\n  dispatchEvent(\n    element,\n    'momentumScrollEnd',\n    EventBuilder.ScrollView.scroll(lastStep, scrollOptions),\n  );\n}\n\nfunction ensureScrollViewDirection(element: ReactTestInstance, options: ScrollToOptions) {\n  const isVerticalScrollView = element.props.horizontal !== true;\n\n  const hasHorizontalScrollOptions = options.x !== undefined || options.momentumX !== undefined;\n  if (isVerticalScrollView && hasHorizontalScrollOptions) {\n    throw new ErrorWithStack(\n      `scrollTo() expected only vertical scroll options: \"y\" and \"momentumY\" for vertical \"ScrollView\" element but received ${stringify(\n        pick(options, ['x', 'momentumX']),\n      )}`,\n      scrollTo,\n    );\n  }\n\n  const hasVerticalScrollOptions = options.y !== undefined || options.momentumY !== undefined;\n  if (!isVerticalScrollView && hasVerticalScrollOptions) {\n    throw new ErrorWithStack(\n      `scrollTo() expected only horizontal scroll options: \"x\" and \"momentumX\" for horizontal \"ScrollView\" element but received ${stringify(\n        pick(options, ['y', 'momentumY']),\n      )}`,\n      scrollTo,\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"scroll-to.js","names":["_jestMatcherUtils","require","_errors","_hostComponentNames","_object","_nativeState","_eventBuilder","_utils","_utils2","scrollTo","element","options","isHostScrollView","ErrorWithStack","type","ensureScrollViewDirection","dispatchEvent","contentSize","width","height","initialOffset","nativeState","contentOffsetForElement","get","x","y","dragSteps","createScrollSteps","linearInterpolator","emitDragScrollEvents","config","momentumStart","at","momentumSteps","momentumY","momentumX","inertialInterpolator","emitMomentumScrollEvents","finalOffset","set","scrollSteps","scrollOptions","length","wait","EventBuilder","ScrollView","scroll","i","lastStep","isVerticalScrollView","props","horizontal","hasHorizontalScrollOptions","undefined","stringify","pick","hasVerticalScrollOptions"],"sources":["../../../src/user-event/scroll/scroll-to.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { stringify } from 'jest-matcher-utils';\n\nimport { ErrorWithStack } from '../../helpers/errors';\nimport { isHostScrollView } from '../../helpers/host-component-names';\nimport { pick } from '../../helpers/object';\nimport { nativeState } from '../../native-state';\nimport type { Point, Size } from '../../types';\nimport { EventBuilder } from '../event-builder';\nimport type { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, wait } from '../utils';\nimport { createScrollSteps, inertialInterpolator, linearInterpolator } from './utils';\n\ninterface CommonScrollToOptions {\n  contentSize?: Size;\n  layoutMeasurement?: Size;\n}\n\nexport interface VerticalScrollToOptions extends CommonScrollToOptions {\n  y: number;\n  momentumY?: number;\n\n  // Vertical scroll should not contain horizontal scroll part.\n  x?: never;\n  momentumX?: never;\n}\n\nexport interface HorizontalScrollToOptions extends CommonScrollToOptions {\n  x: number;\n  momentumX?: number;\n\n  // Horizontal scroll should not contain vertical scroll part.\n  y?: never;\n  momentumY?: never;\n}\n\nexport type ScrollToOptions = VerticalScrollToOptions | HorizontalScrollToOptions;\n\nexport async function scrollTo(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  options: ScrollToOptions,\n): Promise<void> {\n  if (!isHostScrollView(element)) {\n    throw new ErrorWithStack(\n      `scrollTo() works only with host \"ScrollView\" elements. Passed element has type \"${element.type}\".`,\n      scrollTo,\n    );\n  }\n\n  ensureScrollViewDirection(element, options);\n\n  await dispatchEvent(\n    element,\n    'contentSizeChange',\n    options.contentSize?.width ?? 0,\n    options.contentSize?.height ?? 0,\n  );\n\n  const initialOffset = nativeState.contentOffsetForElement.get(element) ?? { x: 0, y: 0 };\n  const dragSteps = createScrollSteps(\n    { y: options.y, x: options.x },\n    initialOffset,\n    linearInterpolator,\n  );\n  await emitDragScrollEvents(this.config, element, dragSteps, options);\n\n  const momentumStart = dragSteps.at(-1) ?? initialOffset;\n  const momentumSteps = createScrollSteps(\n    { y: options.momentumY, x: options.momentumX },\n    momentumStart,\n    inertialInterpolator,\n  );\n  await emitMomentumScrollEvents(this.config, element, momentumSteps, options);\n\n  const finalOffset = momentumSteps.at(-1) ?? dragSteps.at(-1) ?? initialOffset;\n  nativeState.contentOffsetForElement.set(element, finalOffset);\n}\n\nasync function emitDragScrollEvents(\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  scrollSteps: Point[],\n  scrollOptions: ScrollToOptions,\n) {\n  if (scrollSteps.length === 0) {\n    return;\n  }\n\n  await wait(config);\n  await dispatchEvent(\n    element,\n    'scrollBeginDrag',\n    EventBuilder.ScrollView.scroll(scrollSteps[0], scrollOptions),\n  );\n\n  // Note: experimentally, in case of drag scroll the last scroll step\n  // will not trigger `scroll` event.\n  // See: https://github.com/callstack/react-native-testing-library/wiki/ScrollView-Events\n  for (let i = 1; i < scrollSteps.length - 1; i += 1) {\n    await wait(config);\n    await dispatchEvent(\n      element,\n      'scroll',\n      EventBuilder.ScrollView.scroll(scrollSteps[i], scrollOptions),\n    );\n  }\n\n  await wait(config);\n  const lastStep = scrollSteps.at(-1);\n  await dispatchEvent(\n    element,\n    'scrollEndDrag',\n    EventBuilder.ScrollView.scroll(lastStep, scrollOptions),\n  );\n}\n\nasync function emitMomentumScrollEvents(\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  scrollSteps: Point[],\n  scrollOptions: ScrollToOptions,\n) {\n  if (scrollSteps.length === 0) {\n    return;\n  }\n\n  await wait(config);\n  await dispatchEvent(\n    element,\n    'momentumScrollBegin',\n    EventBuilder.ScrollView.scroll(scrollSteps[0], scrollOptions),\n  );\n\n  // Note: experimentally, in case of momentum scroll the last scroll step\n  // will trigger `scroll` event.\n  // See: https://github.com/callstack/react-native-testing-library/wiki/ScrollView-Events\n  for (let i = 1; i < scrollSteps.length; i += 1) {\n    await wait(config);\n    await dispatchEvent(\n      element,\n      'scroll',\n      EventBuilder.ScrollView.scroll(scrollSteps[i], scrollOptions),\n    );\n  }\n\n  await wait(config);\n  const lastStep = scrollSteps.at(-1);\n  await dispatchEvent(\n    element,\n    'momentumScrollEnd',\n    EventBuilder.ScrollView.scroll(lastStep, scrollOptions),\n  );\n}\n\nfunction ensureScrollViewDirection(element: ReactTestInstance, options: ScrollToOptions) {\n  const isVerticalScrollView = element.props.horizontal !== true;\n\n  const hasHorizontalScrollOptions = options.x !== undefined || options.momentumX !== undefined;\n  if (isVerticalScrollView && hasHorizontalScrollOptions) {\n    throw new ErrorWithStack(\n      `scrollTo() expected only vertical scroll options: \"y\" and \"momentumY\" for vertical \"ScrollView\" element but received ${stringify(\n        pick(options, ['x', 'momentumX']),\n      )}`,\n      scrollTo,\n    );\n  }\n\n  const hasVerticalScrollOptions = options.y !== undefined || options.momentumY !== undefined;\n  if (!isVerticalScrollView && hasVerticalScrollOptions) {\n    throw new ErrorWithStack(\n      `scrollTo() expected only horizontal scroll options: \"x\" and \"momentumX\" for horizontal \"ScrollView\" element but received ${stringify(\n        pick(options, ['y', 'momentumY']),\n      )}`,\n      scrollTo,\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/setup/index.d.ts b/node_modules/@testing-library/react-native/build/user-event/setup/index.d.ts
index 21ada8e..a9a331d 100644
--- a/node_modules/@testing-library/react-native/build/user-event/setup/index.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/setup/index.d.ts
@@ -1,2 +1,2 @@
-export type { UserEventConfig, UserEventInstance } from './setup';
-export { setup } from './setup';
+export type { UserEventConfig, UserEventInstance } from '@testing-library/react-native/build/user-event/setup/setup';
+export { setup } from '@testing-library/react-native/build/user-event/setup/setup';
diff --git a/node_modules/@testing-library/react-native/build/user-event/setup/setup.d.ts b/node_modules/@testing-library/react-native/build/user-event/setup/setup.d.ts
index 3a4903d..f7bda7b 100644
--- a/node_modules/@testing-library/react-native/build/user-event/setup/setup.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/setup/setup.d.ts
@@ -1,7 +1,7 @@
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { PressOptions } from '../press';
-import type { ScrollToOptions } from '../scroll';
-import type { TypeOptions } from '../type';
+import type { PressOptions } from '@testing-library/react-native/build/user-event/press';
+import type { ScrollToOptions } from '@testing-library/react-native/build/user-event/scroll';
+import type { TypeOptions } from '@testing-library/react-native/build/user-event/type';
 export interface UserEventSetupOptions {
     /**
      * Between some subsequent inputs like typing a series of characters
diff --git a/node_modules/@testing-library/react-native/build/user-event/type/index.d.ts b/node_modules/@testing-library/react-native/build/user-event/type/index.d.ts
index c99669e..caeb699 100644
--- a/node_modules/@testing-library/react-native/build/user-event/type/index.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/type/index.d.ts
@@ -1 +1 @@
-export { type, TypeOptions } from './type';
+export { type, TypeOptions } from '@testing-library/react-native/build/user-event/type/type';
diff --git a/node_modules/@testing-library/react-native/build/user-event/type/type.d.ts b/node_modules/@testing-library/react-native/build/user-event/type/type.d.ts
index 8925ae9..b23e06f 100644
--- a/node_modules/@testing-library/react-native/build/user-event/type/type.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/type/type.d.ts
@@ -1,5 +1,5 @@
 import type { ReactTestInstance } from 'react-test-renderer';
-import type { UserEventConfig, UserEventInstance } from '../setup';
+import type { UserEventConfig, UserEventInstance } from '@testing-library/react-native/build/user-event/setup';
 export interface TypeOptions {
     skipPress?: boolean;
     submitEditing?: boolean;
diff --git a/node_modules/@testing-library/react-native/build/user-event/type/type.js b/node_modules/@testing-library/react-native/build/user-event/type/type.js
index eeea086..cb4d686 100644
--- a/node_modules/@testing-library/react-native/build/user-event/type/type.js
+++ b/node_modules/@testing-library/react-native/build/user-event/type/type.js
@@ -24,12 +24,12 @@ async function type(element, text, options) {
   }
   const keys = (0, _parseKeys.parseKeys)(text);
   if (!options?.skipPress) {
-    (0, _utils.dispatchEvent)(element, 'pressIn', _eventBuilder.EventBuilder.Common.touch());
+    await (0, _utils.dispatchEvent)(element, 'pressIn', _eventBuilder.EventBuilder.Common.touch());
   }
-  (0, _utils.dispatchEvent)(element, 'focus', _eventBuilder.EventBuilder.Common.focus());
+  await (0, _utils.dispatchEvent)(element, 'focus', _eventBuilder.EventBuilder.Common.focus());
   if (!options?.skipPress) {
     await (0, _utils.wait)(this.config);
-    (0, _utils.dispatchEvent)(element, 'pressOut', _eventBuilder.EventBuilder.Common.touch());
+    await (0, _utils.dispatchEvent)(element, 'pressOut', _eventBuilder.EventBuilder.Common.touch());
   }
   let currentText = (0, _textInput.getTextInputValue)(element);
   for (const key of keys) {
@@ -47,11 +47,11 @@ async function type(element, text, options) {
   const finalText = (0, _textInput.getTextInputValue)(element);
   await (0, _utils.wait)(this.config);
   if (options?.submitEditing) {
-    (0, _utils.dispatchEvent)(element, 'submitEditing', _eventBuilder.EventBuilder.TextInput.submitEditing(finalText));
+    await (0, _utils.dispatchEvent)(element, 'submitEditing', _eventBuilder.EventBuilder.TextInput.submitEditing(finalText));
   }
   if (!options?.skipBlur) {
-    (0, _utils.dispatchEvent)(element, 'endEditing', _eventBuilder.EventBuilder.TextInput.endEditing(finalText));
-    (0, _utils.dispatchEvent)(element, 'blur', _eventBuilder.EventBuilder.Common.blur());
+    await (0, _utils.dispatchEvent)(element, 'endEditing', _eventBuilder.EventBuilder.TextInput.endEditing(finalText));
+    await (0, _utils.dispatchEvent)(element, 'blur', _eventBuilder.EventBuilder.Common.blur());
   }
 }
 async function emitTypingEvents(element, {
@@ -62,7 +62,7 @@ async function emitTypingEvents(element, {
 }) {
   const isMultiline = element.props.multiline === true;
   await (0, _utils.wait)(config);
-  (0, _utils.dispatchEvent)(element, 'keyPress', _eventBuilder.EventBuilder.TextInput.keyPress(key));
+  await (0, _utils.dispatchEvent)(element, 'keyPress', _eventBuilder.EventBuilder.TextInput.keyPress(key));
 
   // Platform difference (based on experiments):
   // - iOS and RN Web: TextInput emits only `keyPress` event when max length has been reached
@@ -71,19 +71,19 @@ async function emitTypingEvents(element, {
     return;
   }
   _nativeState.nativeState.valueForElement.set(element, text);
-  (0, _utils.dispatchEvent)(element, 'change', _eventBuilder.EventBuilder.TextInput.change(text));
-  (0, _utils.dispatchEvent)(element, 'changeText', text);
+  await (0, _utils.dispatchEvent)(element, 'change', _eventBuilder.EventBuilder.TextInput.change(text));
+  await (0, _utils.dispatchEvent)(element, 'changeText', text);
   const selectionRange = {
     start: text.length,
     end: text.length
   };
-  (0, _utils.dispatchEvent)(element, 'selectionChange', _eventBuilder.EventBuilder.TextInput.selectionChange(selectionRange));
+  await (0, _utils.dispatchEvent)(element, 'selectionChange', _eventBuilder.EventBuilder.TextInput.selectionChange(selectionRange));
 
   // According to the docs only multiline TextInput emits contentSizeChange event
   // @see: https://reactnative.dev/docs/textinput#oncontentsizechange
   if (isMultiline) {
     const contentSize = (0, _utils.getTextContentSize)(text);
-    (0, _utils.dispatchEvent)(element, 'contentSizeChange', _eventBuilder.EventBuilder.TextInput.contentSizeChange(contentSize));
+    await (0, _utils.dispatchEvent)(element, 'contentSizeChange', _eventBuilder.EventBuilder.TextInput.contentSizeChange(contentSize));
   }
 }
 function applyKey(text, key) {
diff --git a/node_modules/@testing-library/react-native/build/user-event/type/type.js.map b/node_modules/@testing-library/react-native/build/user-event/type/type.js.map
index 155c054..bfa99bb 100644
--- a/node_modules/@testing-library/react-native/build/user-event/type/type.js.map
+++ b/node_modules/@testing-library/react-native/build/user-event/type/type.js.map
@@ -1 +1 @@
-{"version":3,"file":"type.js","names":["_errors","require","_hostComponentNames","_pointerEvents","_textInput","_nativeState","_eventBuilder","_utils","_parseKeys","type","element","text","options","isHostTextInput","ErrorWithStack","isEditableTextInput","isPointerEventEnabled","keys","parseKeys","skipPress","dispatchEvent","EventBuilder","Common","touch","focus","wait","config","currentText","getTextInputValue","key","previousText","proposedText","applyKey","isAccepted","isTextChangeAccepted","emitTypingEvents","finalText","submitEditing","TextInput","skipBlur","endEditing","blur","isMultiline","props","multiline","keyPress","nativeState","valueForElement","set","change","selectionRange","start","length","end","selectionChange","contentSize","getTextContentSize","contentSizeChange","slice","maxLength","undefined"],"sources":["../../../src/user-event/type/type.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport { ErrorWithStack } from '../../helpers/errors';\nimport { isHostTextInput } from '../../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../../helpers/pointer-events';\nimport { getTextInputValue, isEditableTextInput } from '../../helpers/text-input';\nimport { nativeState } from '../../native-state';\nimport { EventBuilder } from '../event-builder';\nimport type { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, getTextContentSize, wait } from '../utils';\nimport { parseKeys } from './parse-keys';\n\nexport interface TypeOptions {\n  skipPress?: boolean;\n  submitEditing?: boolean;\n  skipBlur?: boolean;\n}\n\nexport async function type(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  text: string,\n  options?: TypeOptions,\n): Promise<void> {\n  if (!isHostTextInput(element)) {\n    throw new ErrorWithStack(\n      `type() works only with host \"TextInput\" elements. Passed element has type \"${element.type}\".`,\n      type,\n    );\n  }\n\n  // Skip events if the element is disabled\n  if (!isEditableTextInput(element) || !isPointerEventEnabled(element)) {\n    return;\n  }\n\n  const keys = parseKeys(text);\n\n  if (!options?.skipPress) {\n    dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n  }\n\n  dispatchEvent(element, 'focus', EventBuilder.Common.focus());\n\n  if (!options?.skipPress) {\n    await wait(this.config);\n    dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n  }\n\n  let currentText = getTextInputValue(element);\n  for (const key of keys) {\n    const previousText = getTextInputValue(element);\n    const proposedText = applyKey(previousText, key);\n    const isAccepted = isTextChangeAccepted(element, proposedText);\n    currentText = isAccepted ? proposedText : previousText;\n\n    await emitTypingEvents(element, {\n      config: this.config,\n      key,\n      text: currentText,\n      isAccepted,\n    });\n  }\n\n  const finalText = getTextInputValue(element);\n  await wait(this.config);\n\n  if (options?.submitEditing) {\n    dispatchEvent(element, 'submitEditing', EventBuilder.TextInput.submitEditing(finalText));\n  }\n\n  if (!options?.skipBlur) {\n    dispatchEvent(element, 'endEditing', EventBuilder.TextInput.endEditing(finalText));\n    dispatchEvent(element, 'blur', EventBuilder.Common.blur());\n  }\n}\n\ntype EmitTypingEventsContext = {\n  config: UserEventConfig;\n  key: string;\n  text: string;\n  isAccepted?: boolean;\n};\n\nexport async function emitTypingEvents(\n  element: ReactTestInstance,\n  { config, key, text, isAccepted }: EmitTypingEventsContext,\n) {\n  const isMultiline = element.props.multiline === true;\n\n  await wait(config);\n  dispatchEvent(element, 'keyPress', EventBuilder.TextInput.keyPress(key));\n\n  // Platform difference (based on experiments):\n  // - iOS and RN Web: TextInput emits only `keyPress` event when max length has been reached\n  // - Android: TextInputs does not emit any events\n  if (isAccepted === false) {\n    return;\n  }\n\n  nativeState.valueForElement.set(element, text);\n  dispatchEvent(element, 'change', EventBuilder.TextInput.change(text));\n  dispatchEvent(element, 'changeText', text);\n\n  const selectionRange = {\n    start: text.length,\n    end: text.length,\n  };\n  dispatchEvent(element, 'selectionChange', EventBuilder.TextInput.selectionChange(selectionRange));\n\n  // According to the docs only multiline TextInput emits contentSizeChange event\n  // @see: https://reactnative.dev/docs/textinput#oncontentsizechange\n  if (isMultiline) {\n    const contentSize = getTextContentSize(text);\n    dispatchEvent(\n      element,\n      'contentSizeChange',\n      EventBuilder.TextInput.contentSizeChange(contentSize),\n    );\n  }\n}\n\nfunction applyKey(text: string, key: string) {\n  if (key === 'Enter') {\n    return `${text}\\n`;\n  }\n\n  if (key === 'Backspace') {\n    return text.slice(0, -1);\n  }\n\n  return text + key;\n}\n\nfunction isTextChangeAccepted(element: ReactTestInstance, text: string) {\n  const maxLength = element.props.maxLength;\n  return maxLength === undefined || text.length <= maxLength;\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"type.js","names":["_errors","require","_hostComponentNames","_pointerEvents","_textInput","_nativeState","_eventBuilder","_utils","_parseKeys","type","element","text","options","isHostTextInput","ErrorWithStack","isEditableTextInput","isPointerEventEnabled","keys","parseKeys","skipPress","dispatchEvent","EventBuilder","Common","touch","focus","wait","config","currentText","getTextInputValue","key","previousText","proposedText","applyKey","isAccepted","isTextChangeAccepted","emitTypingEvents","finalText","submitEditing","TextInput","skipBlur","endEditing","blur","isMultiline","props","multiline","keyPress","nativeState","valueForElement","set","change","selectionRange","start","length","end","selectionChange","contentSize","getTextContentSize","contentSizeChange","slice","maxLength","undefined"],"sources":["../../../src/user-event/type/type.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport { ErrorWithStack } from '../../helpers/errors';\nimport { isHostTextInput } from '../../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../../helpers/pointer-events';\nimport { getTextInputValue, isEditableTextInput } from '../../helpers/text-input';\nimport { nativeState } from '../../native-state';\nimport { EventBuilder } from '../event-builder';\nimport type { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, getTextContentSize, wait } from '../utils';\nimport { parseKeys } from './parse-keys';\n\nexport interface TypeOptions {\n  skipPress?: boolean;\n  submitEditing?: boolean;\n  skipBlur?: boolean;\n}\n\nexport async function type(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  text: string,\n  options?: TypeOptions,\n): Promise<void> {\n  if (!isHostTextInput(element)) {\n    throw new ErrorWithStack(\n      `type() works only with host \"TextInput\" elements. Passed element has type \"${element.type}\".`,\n      type,\n    );\n  }\n\n  // Skip events if the element is disabled\n  if (!isEditableTextInput(element) || !isPointerEventEnabled(element)) {\n    return;\n  }\n\n  const keys = parseKeys(text);\n\n  if (!options?.skipPress) {\n    await dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n  }\n\n  await dispatchEvent(element, 'focus', EventBuilder.Common.focus());\n\n  if (!options?.skipPress) {\n    await wait(this.config);\n    await dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n  }\n\n  let currentText = getTextInputValue(element);\n  for (const key of keys) {\n    const previousText = getTextInputValue(element);\n    const proposedText = applyKey(previousText, key);\n    const isAccepted = isTextChangeAccepted(element, proposedText);\n    currentText = isAccepted ? proposedText : previousText;\n\n    await emitTypingEvents(element, {\n      config: this.config,\n      key,\n      text: currentText,\n      isAccepted,\n    });\n  }\n\n  const finalText = getTextInputValue(element);\n  await wait(this.config);\n\n  if (options?.submitEditing) {\n    await dispatchEvent(element, 'submitEditing', EventBuilder.TextInput.submitEditing(finalText));\n  }\n\n  if (!options?.skipBlur) {\n    await dispatchEvent(element, 'endEditing', EventBuilder.TextInput.endEditing(finalText));\n    await dispatchEvent(element, 'blur', EventBuilder.Common.blur());\n  }\n}\n\ntype EmitTypingEventsContext = {\n  config: UserEventConfig;\n  key: string;\n  text: string;\n  isAccepted?: boolean;\n};\n\nexport async function emitTypingEvents(\n  element: ReactTestInstance,\n  { config, key, text, isAccepted }: EmitTypingEventsContext,\n) {\n  const isMultiline = element.props.multiline === true;\n\n  await wait(config);\n  await dispatchEvent(element, 'keyPress', EventBuilder.TextInput.keyPress(key));\n\n  // Platform difference (based on experiments):\n  // - iOS and RN Web: TextInput emits only `keyPress` event when max length has been reached\n  // - Android: TextInputs does not emit any events\n  if (isAccepted === false) {\n    return;\n  }\n\n  nativeState.valueForElement.set(element, text);\n  await dispatchEvent(element, 'change', EventBuilder.TextInput.change(text));\n  await dispatchEvent(element, 'changeText', text);\n\n  const selectionRange = {\n    start: text.length,\n    end: text.length,\n  };\n  await dispatchEvent(\n    element,\n    'selectionChange',\n    EventBuilder.TextInput.selectionChange(selectionRange),\n  );\n\n  // According to the docs only multiline TextInput emits contentSizeChange event\n  // @see: https://reactnative.dev/docs/textinput#oncontentsizechange\n  if (isMultiline) {\n    const contentSize = getTextContentSize(text);\n    await dispatchEvent(\n      element,\n      'contentSizeChange',\n      EventBuilder.TextInput.contentSizeChange(contentSize),\n    );\n  }\n}\n\nfunction applyKey(text: string, key: string) {\n  if (key === 'Enter') {\n    return `${text}\\n`;\n  }\n\n  if (key === 'Backspace') {\n    return text.slice(0, -1);\n  }\n\n  return text + key;\n}\n\nfunction isTextChangeAccepted(element: ReactTestInstance, text: string) {\n  const maxLength = element.props.maxLength;\n  return maxLength === undefined || text.length <= maxLength;\n}\n"],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.d.ts b/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.d.ts
index 35b4da7..950ab58 100644
--- a/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.d.ts
+++ b/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.d.ts
@@ -6,4 +6,4 @@ import type { ReactTestInstance } from 'react-test-renderer';
  * @param eventName name of the event
  * @param event event payload(s)
  */
-export declare function dispatchEvent(element: ReactTestInstance, eventName: string, ...event: unknown[]): void;
+export declare function dispatchEvent(element: ReactTestInstance, eventName: string, ...event: unknown[]): Promise<void>;
diff --git a/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.js b/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.js
index 054a9e0..e76ad7d 100644
--- a/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.js
+++ b/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.js
@@ -15,7 +15,7 @@ function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e
  * @param eventName name of the event
  * @param event event payload(s)
  */
-function dispatchEvent(element, eventName, ...event) {
+async function dispatchEvent(element, eventName, ...event) {
   if (!(0, _componentTree.isElementMounted)(element)) {
     return;
   }
@@ -25,7 +25,7 @@ function dispatchEvent(element, eventName, ...event) {
   }
 
   // This will be called synchronously.
-  void (0, _act.default)(() => {
+  await (0, _act.default)(async () => {
     handler(...event);
   });
 }
diff --git a/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.js.map b/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.js.map
index 97aaaae..adb3949 100644
--- a/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.js.map
+++ b/node_modules/@testing-library/react-native/build/user-event/utils/dispatch-event.js.map
@@ -1 +1 @@
-{"version":3,"file":"dispatch-event.js","names":["_act","_interopRequireDefault","require","_eventHandler","_componentTree","e","__esModule","default","dispatchEvent","element","eventName","event","isElementMounted","handler","getEventHandler","act"],"sources":["../../../src/user-event/utils/dispatch-event.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport act from '../../act';\nimport { getEventHandler } from '../../event-handler';\nimport { isElementMounted } from '../../helpers/component-tree';\n\n/**\n * Basic dispatch event function used by User Event module.\n *\n * @param element element trigger event on\n * @param eventName name of the event\n * @param event event payload(s)\n */\nexport function dispatchEvent(element: ReactTestInstance, eventName: string, ...event: unknown[]) {\n  if (!isElementMounted(element)) {\n    return;\n  }\n\n  const handler = getEventHandler(element, eventName);\n  if (!handler) {\n    return;\n  }\n\n  // This will be called synchronously.\n  void act(() => {\n    handler(...event);\n  });\n}\n"],"mappings":";;;;;;AAEA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AAAgE,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,aAAaA,CAACC,OAA0B,EAAEC,SAAiB,EAAE,GAAGC,KAAgB,EAAE;EAChG,IAAI,CAAC,IAAAC,+BAAgB,EAACH,OAAO,CAAC,EAAE;IAC9B;EACF;EAEA,MAAMI,OAAO,GAAG,IAAAC,6BAAe,EAACL,OAAO,EAAEC,SAAS,CAAC;EACnD,IAAI,CAACG,OAAO,EAAE;IACZ;EACF;;EAEA;EACA,KAAK,IAAAE,YAAG,EAAC,MAAM;IACbF,OAAO,CAAC,GAAGF,KAAK,CAAC;EACnB,CAAC,CAAC;AACJ","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"dispatch-event.js","names":["_act","_interopRequireDefault","require","_eventHandler","_componentTree","e","__esModule","default","dispatchEvent","element","eventName","event","isElementMounted","handler","getEventHandler","act"],"sources":["../../../src/user-event/utils/dispatch-event.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport act from '../../act';\nimport { getEventHandler } from '../../event-handler';\nimport { isElementMounted } from '../../helpers/component-tree';\n\n/**\n * Basic dispatch event function used by User Event module.\n *\n * @param element element trigger event on\n * @param eventName name of the event\n * @param event event payload(s)\n */\nexport async function dispatchEvent(\n  element: ReactTestInstance,\n  eventName: string,\n  ...event: unknown[]\n) {\n  if (!isElementMounted(element)) {\n    return;\n  }\n\n  const handler = getEventHandler(element, eventName);\n  if (!handler) {\n    return;\n  }\n\n  // This will be called synchronously.\n  await act(async () => {\n    handler(...event);\n  });\n}\n"],"mappings":";;;;;;AAEA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AAAgE,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeG,aAAaA,CACjCC,OAA0B,EAC1BC,SAAiB,EACjB,GAAGC,KAAgB,EACnB;EACA,IAAI,CAAC,IAAAC,+BAAgB,EAACH,OAAO,CAAC,EAAE;IAC9B;EACF;EAEA,MAAMI,OAAO,GAAG,IAAAC,6BAAe,EAACL,OAAO,EAAEC,SAAS,CAAC;EACnD,IAAI,CAACG,OAAO,EAAE;IACZ;EACF;;EAEA;EACA,MAAM,IAAAE,YAAG,EAAC,YAAY;IACpBF,OAAO,CAAC,GAAGF,KAAK,CAAC;EACnB,CAAC,CAAC;AACJ","ignoreList":[]}
\ No newline at end of file
diff --git a/node_modules/@testing-library/react-native/build/wait-for-element-to-be-removed.d.ts b/node_modules/@testing-library/react-native/build/wait-for-element-to-be-removed.d.ts
index 265402c..2ad14d3 100644
--- a/node_modules/@testing-library/react-native/build/wait-for-element-to-be-removed.d.ts
+++ b/node_modules/@testing-library/react-native/build/wait-for-element-to-be-removed.d.ts
@@ -1,2 +1,2 @@
-import type { WaitForOptions } from './wait-for';
+import type { WaitForOptions } from '@testing-library/react-native/build/wait-for';
 export default function waitForElementToBeRemoved<T>(expectation: () => T, options?: WaitForOptions): Promise<T>;
diff --git a/node_modules/@testing-library/react-native/build/wait-for.d.ts b/node_modules/@testing-library/react-native/build/wait-for.d.ts
index 27eff1f..e461d83 100644
--- a/node_modules/@testing-library/react-native/build/wait-for.d.ts
+++ b/node_modules/@testing-library/react-native/build/wait-for.d.ts
@@ -1,4 +1,4 @@
-import { ErrorWithStack } from './helpers/errors';
+import { ErrorWithStack } from '@testing-library/react-native/build/helpers/errors';
 export type WaitForOptions = {
     timeout?: number;
     interval?: number;
diff --git a/node_modules/@testing-library/react-native/build/within.d.ts b/node_modules/@testing-library/react-native/build/within.d.ts
index cd24e65..f59e709 100644
--- a/node_modules/@testing-library/react-native/build/within.d.ts
+++ b/node_modules/@testing-library/react-native/build/within.d.ts
@@ -16,59 +16,59 @@ export declare function within(instance: ReactTestInstance): {
     UNSAFE_getAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;
     UNSAFE_queryByType: <P>(type: React.ComponentType<P>) => ReactTestInstance | null;
     UNSAFE_queryAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;
-    getByRole: import("./queries/make-queries").GetByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    getAllByRole: import("./queries/make-queries").GetAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    queryByRole: import("./queries/make-queries").QueryByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    queryAllByRole: import("./queries/make-queries").QueryAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    findByRole: import("./queries/make-queries").FindByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    findAllByRole: import("./queries/make-queries").FindAllByQuery<import("./queries/role").ByRoleMatcher, import("./queries/role").ByRoleOptions>;
-    getByHintText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByHintText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByHintText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByHintText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByHintText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByHintText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByA11yHint: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByA11yHint: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByA11yHint: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByA11yHint: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByA11yHint: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByA11yHint: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByAccessibilityHint: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByAccessibilityHint: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByAccessibilityHint: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByAccessibilityHint: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByAccessibilityHint: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByAccessibilityHint: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByLabelText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByLabelText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByLabelText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByLabelText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByLabelText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByLabelText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByPlaceholderText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByPlaceholderText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByPlaceholderText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByPlaceholderText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByPlaceholderText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByPlaceholderText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByDisplayValue: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByDisplayValue: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByDisplayValue: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByDisplayValue: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByDisplayValue: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByDisplayValue: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByTestId: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByTestId: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByTestId: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByTestId: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByTestId: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByTestId: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getByText: import("./queries/make-queries").GetByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    getAllByText: import("./queries/make-queries").GetAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryByText: import("./queries/make-queries").QueryByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    queryAllByText: import("./queries/make-queries").QueryAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findByText: import("./queries/make-queries").FindByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
-    findAllByText: import("./queries/make-queries").FindAllByQuery<import("./matches").TextMatch, import("./queries/options").CommonQueryOptions & import("./matches").TextMatchOptions>;
+    getByRole: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    getAllByRole: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    queryByRole: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    queryAllByRole: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    findByRole: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    findAllByRole: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/queries/role").ByRoleMatcher, import("@testing-library/react-native/build/queries/role").ByRoleOptions>;
+    getByHintText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByHintText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByHintText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByHintText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByHintText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByHintText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByA11yHint: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByA11yHint: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByA11yHint: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByA11yHint: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByAccessibilityHint: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByLabelText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByLabelText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByLabelText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByLabelText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByPlaceholderText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByDisplayValue: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByTestId: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByTestId: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByTestId: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByTestId: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByTestId: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByTestId: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getByText: import("@testing-library/react-native/build/queries/make-queries").GetByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    getAllByText: import("@testing-library/react-native/build/queries/make-queries").GetAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryByText: import("@testing-library/react-native/build/queries/make-queries").QueryByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    queryAllByText: import("@testing-library/react-native/build/queries/make-queries").QueryAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findByText: import("@testing-library/react-native/build/queries/make-queries").FindByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
+    findAllByText: import("@testing-library/react-native/build/queries/make-queries").FindAllByQuery<import("@testing-library/react-native/build/matches").TextMatch, import("@testing-library/react-native/build/queries/options").CommonQueryOptions & import("@testing-library/react-native/build/matches").TextMatchOptions>;
 };
 export declare const getQueriesForElement: typeof within;
