name: ‚ö°Ô∏è Set up ccache

description: Sets up ccache, a compiler cache, speeding up native builds

# Inputs are a subset of ccache options. Only the options that need to be
# configured are implemented ‚Äì add additional ones as necessary. See [docs][1].
#
# [1]: https://ccache.dev/manual/latest.html#_command_line_options
inputs:
  depend-mode:
    description: See https://ccache.dev/manual/latest.html#config_depend_mode.
    required: false
  file-clone:
    description: See https://ccache.dev/manual/latest.html#config_file_clone.
    required: false
  inode-cache:
    description: See https://ccache.dev/manual/latest.html#config_inode_cache.
    required: false
  sloppiness:
    description: See https://ccache.dev/manual/latest.html#config_sloppiness.
    required: false

outputs:
  debug-directory:
    description: >
      Directory where debug artifacts will be stored.
      Use with `actions/upload-artifact` to save.
    value: ${{ steps.debug.outputs.directory }}

runs:
  using: 'composite'
  steps:
    - name: üêõ Enable debug mode
      id: debug
      if: runner.debug
      shell: bash
      run: ${{ github.action_path }}/enable-debug-mode.sh

    - name: üå≤ Configure environment
      shell: bash
      env:
        depend_mode: ${{ inputs.depend-mode }}
        file_clone: ${{ inputs.file-clone }}
        inode_cache: ${{ inputs.inode-cache }}
        sloppiness: ${{ inputs.sloppiness }}
      run: ${{ github.action_path }}/configure-environment.sh

    - name: ‚ö°Ô∏è Set up ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        # Cache key will be automatically prefixed with `ccache`, see
        # [source][1].
        #
        # ---
        #
        # Having a deterministic cache key is very difficult because the
        # contents of the cache is a result of different factors including:
        #
        # - Native source files ('*.c', '*.cc', '*.cpp', '*.cxx', '*.m', etc)
        # - Configuration files ('ccache.conf', '*.pbxproj', etc)
        # - Environment variables
        # - The specific build command and options used
        #
        # If the cache key only partially accounts for the variables listed
        # above, changes in any unaccounted variables will mean the cache key
        # does not change and the cache contents persisted into the GitHub
        # Actions cache does not get updated, resulting in a stale cache. A
        # stale cache results in cache misses, increasing the build time.
        #
        # To reduce the risk of a stale cache and cache misses, the commit SHA
        # forms part of the cache key. This means the cache is always guaranteed
        # to be up-to-date. However, it comes with certain costs:
        #
        # - The cache is updated on every commit. This is worth it as it only
        #   takes a few seconds compared to the minutes saved in build time.
        # - The cache storage contains unnecessary cache entries. This is worth
        #   it as build time savings are worth the extra consumption in storage.
        #   Cache entries older than the most recent one will never be reused
        #   and be automatically evicted after 7 days or once the storage limit
        #   is reached, see [GitHub documentation][2].
        #
        # The ccache GitHub Action, uses the [timestamp of the run][3] to solve
        # the above problem, by default. However, the commit SHA is favoured
        # because it is slightly more stable (it doesn't change on workflow
        # re-runs with the same commit) while providing the same benefits.
        #
        # yamllint disable rule:line-length
        # [1]: https://github.com/hendrikmuhs/ccache-action/blob/4f314b2aaa5118b9e49eb811277df5b0906bce93/src/restore.ts#L24
        # [2]: https://docs.github.com/en/actions/reference/workflows-and-actions/dependency-caching#usage-limits-and-eviction-policy
        # [3]: https://github.com/hendrikmuhs/ccache-action/blob/4f314b2aaa5118b9e49eb811277df5b0906bce93/action.yml#L27-L30
        # yamllint enable rule:line-length
        key: "${{ runner.os }}-\
          ${{ runner.arch }}-\
          ${{ github.workflow }}-\
          ${{ github.job }}-\
          ${{ github.sha }}"

        # Restore keys are automatically prefixed with `ccache` ([source][1]).
        # Note, there is a [bug][2] in the ccache GitHub Action where a dash
        # (`-`) is unnecessarily appended ‚Äì this means the restore keys below
        # should not having a trailing dash.
        #
        # yamllint disable rule:line-length
        # [1]: https://github.com/hendrikmuhs/ccache-action/blob/4f314b2aaa5118b9e49eb811277df5b0906bce93/src/restore.ts#L26C51-L26C60
        # [2]: https://github.com/hendrikmuhs/ccache-action/issues/302
        # yamllint enable rule:line-length
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-${{ github.workflow }}-${{ github.job }}
          ${{ runner.os }}-${{ runner.arch }}
          ${{ runner.os }}

        append-timestamp: false

        create-symlink: true

        # The max size is not the size of the cache entry in GitHub Actions but
        # the size of the ccache cache before compression. The default set by
        # the ccache GitHub Action was 500 MB but iOS builds were producing a
        # cache size of 1.4 GB, as shown by `ccache --show-stats`. 2 GB has been
        # set to provide some tolerance to a growth in cache size.
        max-size: 2G

        verbose: ${{ runner.debug && ('2' || '0') }}
