name: Load database fixture
appId: ${appId}
tags:
  - subflow
---
# Maestro cannot open a deep link and pass launch arguments to the app which is
# needed for loading database fixtures and testing deep links. This workaround
# launches the app with the launch argument for loading a database fixture then
# closes the app to so that the deep link can be tested. See this GitHub issue:
# https://github.com/mobile-dev-inc/maestro/issues/2192

- launchApp:
    clearState: true
    arguments:
      databaseFixture: ${databaseFixture}

# Wait for database migrations and the test fixture to be applied. It works by
# checking for the visibility of text as text will be visible after the splash
# screen is hidden; and the splash screen is hidden after database migrations
# and the test fixture are applied. "Downloading" is excluded from the allowed
# text because it is shown in development builds while the JavaScript bundle is
# being downloaded from the development server.
- extendedWaitUntil:
    notVisible:
      text: Downloading
    visible:
      text: .

- stopApp
